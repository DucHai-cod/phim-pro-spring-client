[{"E:\\MyApp\\Github\\NodeProject\\teamovies\\client\\src\\index.js":"1","E:\\MyApp\\Github\\NodeProject\\teamovies\\client\\src\\App.jsx":"2","E:\\MyApp\\Github\\NodeProject\\teamovies\\client\\src\\reducers\\index.js":"3","E:\\MyApp\\Github\\NodeProject\\teamovies\\client\\src\\actions\\user.action.js":"4","E:\\MyApp\\Github\\NodeProject\\teamovies\\client\\src\\components\\Header\\Header.jsx":"5","E:\\MyApp\\Github\\NodeProject\\teamovies\\client\\src\\pages\\Home\\Home.jsx":"6","E:\\MyApp\\Github\\NodeProject\\teamovies\\client\\src\\components\\Footer\\Footer.jsx":"7","E:\\MyApp\\Github\\NodeProject\\teamovies\\client\\src\\reducers\\user.reducer.js":"8","E:\\MyApp\\Github\\NodeProject\\teamovies\\client\\src\\constants\\actionTypes.js":"9","E:\\MyApp\\Github\\NodeProject\\teamovies\\client\\src\\components\\Header\\Nav\\Nav.jsx":"10","E:\\MyApp\\Github\\NodeProject\\teamovies\\client\\src\\components\\Search\\Search.jsx":"11","E:\\MyApp\\Github\\NodeProject\\teamovies\\client\\src\\components\\Home\\RightContent\\RightContent.jsx":"12","E:\\MyApp\\Github\\NodeProject\\teamovies\\client\\src\\components\\Home\\LeftContent\\LeftContent.jsx":"13","E:\\MyApp\\Github\\NodeProject\\teamovies\\client\\src\\components\\utils\\ListFilm\\ListFilm.jsx":"14","E:\\MyApp\\Github\\NodeProject\\teamovies\\client\\src\\components\\utils\\ListFilm\\Film\\Film.jsx":"15","E:\\MyApp\\Github\\NodeProject\\teamovies\\client\\src\\components\\utils\\Stars\\Stars.jsx":"16","E:\\MyApp\\Github\\NodeProject\\teamovies\\client\\src\\apis\\index.js":"17","E:\\MyApp\\Github\\NodeProject\\teamovies\\client\\src\\apis\\axios.js":"18","E:\\MyApp\\Github\\NodeProject\\teamovies\\client\\src\\pages\\Login\\Login.jsx":"19","E:\\MyApp\\Github\\NodeProject\\teamovies\\client\\src\\pages\\Manager\\Manager.jsx":"20","E:\\MyApp\\Github\\NodeProject\\teamovies\\client\\src\\pages\\OddFilm\\OddFilm.jsx":"21","E:\\MyApp\\Github\\NodeProject\\teamovies\\client\\src\\pages\\SeriesFilm\\SeriesFilm.jsx":"22","E:\\MyApp\\Github\\NodeProject\\teamovies\\client\\src\\pages\\Film\\Film.jsx":"23","E:\\MyApp\\Github\\NodeProject\\teamovies\\client\\src\\components\\Modal\\ModalFilm.jsx":"24","E:\\MyApp\\Github\\NodeProject\\teamovies\\client\\src\\reducers\\film.reducer.js":"25","E:\\MyApp\\Github\\NodeProject\\teamovies\\client\\src\\actions\\film.action.js":"26","E:\\MyApp\\Github\\JavaProject\\spring\\project\\phim_pro_client\\src\\index.js":"27","E:\\MyApp\\Github\\JavaProject\\spring\\project\\phim_pro_client\\src\\App.jsx":"28","E:\\MyApp\\Github\\JavaProject\\spring\\project\\phim_pro_client\\src\\reducers\\index.js":"29","E:\\MyApp\\Github\\JavaProject\\spring\\project\\phim_pro_client\\src\\actions\\user.action.js":"30","E:\\MyApp\\Github\\JavaProject\\spring\\project\\phim_pro_client\\src\\actions\\film.action.js":"31","E:\\MyApp\\Github\\JavaProject\\spring\\project\\phim_pro_client\\src\\pages\\Login\\Login.jsx":"32","E:\\MyApp\\Github\\JavaProject\\spring\\project\\phim_pro_client\\src\\pages\\Home\\Home.jsx":"33","E:\\MyApp\\Github\\JavaProject\\spring\\project\\phim_pro_client\\src\\pages\\Manager\\Manager.jsx":"34","E:\\MyApp\\Github\\JavaProject\\spring\\project\\phim_pro_client\\src\\pages\\SeriesFilm\\SeriesFilm.jsx":"35","E:\\MyApp\\Github\\JavaProject\\spring\\project\\phim_pro_client\\src\\pages\\OddFilm\\OddFilm.jsx":"36","E:\\MyApp\\Github\\JavaProject\\spring\\project\\phim_pro_client\\src\\components\\Header\\Header.jsx":"37","E:\\MyApp\\Github\\JavaProject\\spring\\project\\phim_pro_client\\src\\pages\\Film\\Film.jsx":"38","E:\\MyApp\\Github\\JavaProject\\spring\\project\\phim_pro_client\\src\\components\\Footer\\Footer.jsx":"39","E:\\MyApp\\Github\\JavaProject\\spring\\project\\phim_pro_client\\src\\reducers\\film.reducer.js":"40","E:\\MyApp\\Github\\JavaProject\\spring\\project\\phim_pro_client\\src\\reducers\\user.reducer.js":"41","E:\\MyApp\\Github\\JavaProject\\spring\\project\\phim_pro_client\\src\\constants\\actionTypes.js":"42","E:\\MyApp\\Github\\JavaProject\\spring\\project\\phim_pro_client\\src\\components\\Search\\Search.jsx":"43","E:\\MyApp\\Github\\JavaProject\\spring\\project\\phim_pro_client\\src\\components\\Modal\\ModalFilm.jsx":"44","E:\\MyApp\\Github\\JavaProject\\spring\\project\\phim_pro_client\\src\\components\\Header\\Nav\\Nav.jsx":"45","E:\\MyApp\\Github\\JavaProject\\spring\\project\\phim_pro_client\\src\\components\\utils\\Stars\\Stars.jsx":"46","E:\\MyApp\\Github\\JavaProject\\spring\\project\\phim_pro_client\\src\\components\\utils\\ListFilm\\ListFilm.jsx":"47","E:\\MyApp\\Github\\JavaProject\\spring\\project\\phim_pro_client\\src\\components\\Home\\LeftContent\\LeftContent.jsx":"48","E:\\MyApp\\Github\\JavaProject\\spring\\project\\phim_pro_client\\src\\components\\Home\\RightContent\\RightContent.jsx":"49","E:\\MyApp\\Github\\JavaProject\\spring\\project\\phim_pro_client\\src\\apis\\index.js":"50","E:\\MyApp\\Github\\JavaProject\\spring\\project\\phim_pro_client\\src\\apis\\axios.js":"51","E:\\MyApp\\Github\\JavaProject\\spring\\project\\phim_pro_client\\src\\components\\utils\\ListFilm\\Film\\Film.jsx":"52","E:\\MyApp\\Github\\JavaProject\\spring\\project\\phim_pro_client\\src\\components\\utils\\convert.js":"53","E:\\MyApp\\Github\\JavaProject\\spring\\project\\phim_pro_client\\src\\components\\utils\\similarString.js":"54","E:\\MyApp\\Github\\JavaProject\\spring\\project\\phim_pro_client\\src\\components\\Comment\\Comment.jsx":"55","E:\\MyApp\\Github\\JavaProject\\spring\\project\\phim_pro_client\\src\\components\\Comment\\Comments\\Comments.jsx":"56","E:\\MyApp\\Github\\JavaProject\\spring\\project\\phim_pro_client\\src\\components\\Comment\\FormComment\\FormComment.jsx":"57","E:\\MyApp\\Github\\JavaProject\\spring\\project\\phim_pro_client\\src\\components\\Comment\\Comments\\ItemCmt.jsx":"58","E:\\MyApp\\Github\\JavaProject\\spring\\project\\phim_pro_client\\src\\reducers\\comment.reducer.js":"59","E:\\MyApp\\Github\\JavaProject\\spring\\project\\phim_pro_client\\src\\actions\\comment.action.js":"60","E:\\MyApp\\Github\\JavaProject\\spring\\project\\phim_pro_client\\src\\components\\utils\\moment.js":"61","E:\\MyApp\\Github\\JavaProject\\spring\\project\\phim_pro_client\\src\\apis\\firebase.js":"62","E:\\MyApp\\Github\\JavaProject\\spring\\project\\phim_pro_client\\src\\components\\Episode\\Episode.jsx":"63","E:\\MyApp\\Github\\JavaProject\\spring\\project\\phim_pro_client\\src\\components\\Episode\\Episodes\\Episodes.jsx":"64","E:\\MyApp\\Github\\JavaProject\\spring\\project\\phim_pro_client\\src\\components\\utils\\Hooks\\useOnScreen.js":"65","E:\\MyApp\\Github\\JavaProject\\spring\\project\\phim_pro_client\\src\\pages\\Payment\\Payment.jsx":"66","E:\\MyApp\\Github\\JavaProject\\spring\\project\\phim_pro_client\\src\\pages\\VnPayReturn\\VnPayReturn.jsx":"67"},{"size":531,"mtime":1614045699185,"results":"68","hashOfConfig":"69"},{"size":1724,"mtime":1614065455810,"results":"70","hashOfConfig":"69"},{"size":180,"mtime":1614053391321,"results":"71","hashOfConfig":"69"},{"size":2825,"mtime":1614065019937,"results":"72","hashOfConfig":"69"},{"size":731,"mtime":1613883117384,"results":"73","hashOfConfig":"69"},{"size":713,"mtime":1614053987915,"results":"74","hashOfConfig":"69"},{"size":1205,"mtime":1613883117383,"results":"75","hashOfConfig":"69"},{"size":814,"mtime":1614065500228,"results":"76","hashOfConfig":"69"},{"size":799,"mtime":1614064801785,"results":"77","hashOfConfig":"69"},{"size":2088,"mtime":1614065171518,"results":"78","hashOfConfig":"69"},{"size":521,"mtime":1613883117389,"results":"79","hashOfConfig":"69"},{"size":1584,"mtime":1614054996593,"results":"80","hashOfConfig":"69"},{"size":733,"mtime":1614053987995,"results":"81","hashOfConfig":"69"},{"size":389,"mtime":1614054366814,"results":"82","hashOfConfig":"69"},{"size":1137,"mtime":1614057350657,"results":"83","hashOfConfig":"69"},{"size":550,"mtime":1613883117395,"results":"84","hashOfConfig":"69"},{"size":1356,"mtime":1614059901092,"results":"85","hashOfConfig":"69"},{"size":116,"mtime":1614066908326,"results":"86","hashOfConfig":"69"},{"size":8066,"mtime":1614056601797,"results":"87","hashOfConfig":"69"},{"size":7638,"mtime":1614065337348,"results":"88","hashOfConfig":"69"},{"size":868,"mtime":1614055172377,"results":"89","hashOfConfig":"69"},{"size":884,"mtime":1614055222010,"results":"90","hashOfConfig":"69"},{"size":5452,"mtime":1614065238777,"results":"91","hashOfConfig":"69"},{"size":441,"mtime":1613883117388,"results":"92","hashOfConfig":"69"},{"size":1094,"mtime":1614059073397,"results":"93","hashOfConfig":"69"},{"size":1984,"mtime":1614064599276,"results":"94","hashOfConfig":"69"},{"size":542,"mtime":1619437536093,"results":"95","hashOfConfig":"96"},{"size":1882,"mtime":1620122816855,"results":"97","hashOfConfig":"96"},{"size":233,"mtime":1619760442319,"results":"98","hashOfConfig":"96"},{"size":2431,"mtime":1619774938821,"results":"99","hashOfConfig":"96"},{"size":2089,"mtime":1619780411447,"results":"100","hashOfConfig":"96"},{"size":10732,"mtime":1620124186465,"results":"101","hashOfConfig":"96"},{"size":713,"mtime":1619439692306,"results":"102","hashOfConfig":"96"},{"size":7851,"mtime":1619796570984,"results":"103","hashOfConfig":"96"},{"size":901,"mtime":1619539893312,"results":"104","hashOfConfig":"96"},{"size":857,"mtime":1619539955951,"results":"105","hashOfConfig":"96"},{"size":727,"mtime":1619438921118,"results":"106","hashOfConfig":"96"},{"size":8968,"mtime":1620124077883,"results":"107","hashOfConfig":"96"},{"size":1201,"mtime":1619438868335,"results":"108","hashOfConfig":"96"},{"size":1210,"mtime":1619780282643,"results":"109","hashOfConfig":"96"},{"size":1496,"mtime":1620118767184,"results":"110","hashOfConfig":"96"},{"size":1246,"mtime":1619779506954,"results":"111","hashOfConfig":"96"},{"size":521,"mtime":1613883117389,"results":"112","hashOfConfig":"96"},{"size":441,"mtime":1613883117388,"results":"113","hashOfConfig":"96"},{"size":2018,"mtime":1619496854439,"results":"114","hashOfConfig":"96"},{"size":550,"mtime":1613883117395,"results":"115","hashOfConfig":"96"},{"size":407,"mtime":1619924158700,"results":"116","hashOfConfig":"96"},{"size":1439,"mtime":1619793317437,"results":"117","hashOfConfig":"96"},{"size":1606,"mtime":1619540009674,"results":"118","hashOfConfig":"96"},{"size":1991,"mtime":1620121875721,"results":"119","hashOfConfig":"96"},{"size":218,"mtime":1620194597153,"results":"120","hashOfConfig":"96"},{"size":1722,"mtime":1619927778098,"results":"121","hashOfConfig":"96"},{"size":235,"mtime":1619496127160,"results":"122","hashOfConfig":"96"},{"size":991,"mtime":1619750994385,"results":"123","hashOfConfig":"96"},{"size":1349,"mtime":1619930339754,"results":"124","hashOfConfig":"96"},{"size":659,"mtime":1619926105791,"results":"125","hashOfConfig":"96"},{"size":1356,"mtime":1619766600627,"results":"126","hashOfConfig":"96"},{"size":2773,"mtime":1620118864280,"results":"127","hashOfConfig":"96"},{"size":486,"mtime":1619781657322,"results":"128","hashOfConfig":"96"},{"size":1024,"mtime":1619761268232,"results":"129","hashOfConfig":"96"},{"size":603,"mtime":1619782043283,"results":"130","hashOfConfig":"96"},{"size":450,"mtime":1619771010425,"results":"131","hashOfConfig":"96"},{"size":1047,"mtime":1619930039626,"results":"132","hashOfConfig":"96"},{"size":2844,"mtime":1619934051896,"results":"133","hashOfConfig":"96"},{"size":569,"mtime":1619928793696,"results":"134","hashOfConfig":"96"},{"size":1113,"mtime":1620124287890,"results":"135","hashOfConfig":"96"},{"size":1183,"mtime":1620123737424,"results":"136","hashOfConfig":"96"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},"14uhf99",{"filePath":"140","messages":"141","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"139"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"139"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"139"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"139"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"139"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"139"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"139"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"139"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"139"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"139"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},"1bsf92y",{"filePath":"203","messages":"204","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"202"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"202"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"202"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"202"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"202"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"202"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"202"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"202"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"202"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"202"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"202"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"202"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"202"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"202"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279","usedDeprecatedRules":"202"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"202"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"202"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"294","usedDeprecatedRules":"202"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"299","usedDeprecatedRules":"202"},"E:\\MyApp\\Github\\NodeProject\\teamovies\\client\\src\\index.js",[],["300","301"],"E:\\MyApp\\Github\\NodeProject\\teamovies\\client\\src\\App.jsx",["302","303"],"import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport { useCookies } from \"react-cookie\";\r\n\r\nimport { checkLogin, setRole } from \"./actions/user.action\";\r\nimport { getFilms } from \"./actions/film.action\";\r\n\r\nimport \"./scss/index.scss\";\r\nimport Home from \"./pages/Home/Home\";\r\nimport Login from \"./pages/Login/Login\";\r\nimport Film from \"./pages/Film/Film\";\r\nimport Manager from \"./pages/Manager/Manager\";\r\nimport OddFilm from \"./pages/OddFilm/OddFilm\";\r\nimport SeriesFilm from \"./pages/SeriesFilm/SeriesFilm\";\r\nimport Header from \"./components/Header/Header\";\r\nimport Footer from \"./components/Footer/Footer\";\r\n\r\nconst App = () => {\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.users.user);\r\n  const [cookies] = useCookies([\"user\"]);\r\n  useEffect(() => {\r\n    if (cookies.user !== \"\") {\r\n      dispatch(checkLogin(cookies.user));\r\n    }\r\n    dispatch(getFilms());\r\n  }, []);\r\n  useEffect(() => {\r\n    dispatch(setRole(user?._id));\r\n  }, [user]);\r\n  return (\r\n    <div className=\"app\">\r\n      <Router>\r\n        <Header />\r\n        <section className=\"app__content\">\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Home} />\r\n            <Route path=\"/oddfilm\" component={OddFilm} />\r\n            <Route path=\"/seriesfilm\" component={SeriesFilm} />\r\n            <Route path=\"/account\" component={Login} />\r\n            <Route path=\"/manager\" component={Manager} />\r\n            <Route path=\"/film/:id\" component={Film} />\r\n          </Switch>\r\n        </section>\r\n        <Footer />\r\n      </Router>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","E:\\MyApp\\Github\\NodeProject\\teamovies\\client\\src\\reducers\\index.js",[],"E:\\MyApp\\Github\\NodeProject\\teamovies\\client\\src\\actions\\user.action.js",["304","305"],"import {\r\n  LOGIN,\r\n  REGISTER,\r\n  DELETE_USER,\r\n  GET_USER,\r\n  LOGOUT,\r\n  CHECK_LOGIN,\r\n  LOGIN_GOOGLE,\r\n  ADD_FAVORITE,\r\n  ADD_WATCHED,\r\n  REMOVE_FAVORITE,\r\n  SET_ROLE,\r\n} from \"../constants/actionTypes\";\r\nimport * as api from \"../apis\";\r\n\r\nexport const registerUser = (user, setCookies) => async (dispatch) => {\r\n  try {\r\n    await api.registerUser(user);\r\n    const { data } = await api.loginUser({ email: user.email, password: user.password });\r\n    await setCookies(\"user\", data.token, { path: \"/\" });\r\n    dispatch({ type: REGISTER, payload: data });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\nexport const loginUser = (user, setCookies) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.loginUser({ email: user.email, password: user.password });\r\n    await setCookies(\"user\", data.token, { path: \"/\" });\r\n    dispatch({ type: LOGIN, payload: data });\r\n  } catch (error) {\r\n    return error.response.data.message;\r\n  }\r\n};\r\nexport const logoutUser = () => (dispatch) => {\r\n  try {\r\n    dispatch({ type: LOGOUT });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\nexport const checkLogin = (token) => async (dispatch) => {\r\n  try {\r\n    if (token) {\r\n      const check = await api.checkLogin(token);\r\n      if (check.data) {\r\n        const { data } = await api.getUser(token);\r\n        dispatch({ type: CHECK_LOGIN, payload: { data, token } });\r\n      }\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\nexport const loginGoogle = (user, setCookies) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.loginGoogle(user);\r\n    setCookies(\"user\", data.token, { path: \"/\" });\r\n    dispatch({ type: LOGIN_GOOGLE, payload: data });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\nexport const addFavorite = (id, idFilm) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.addFavorite(id, idFilm);\r\n    console.log(data);\r\n    dispatch({ type: ADD_FAVORITE, payload: data });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\nexport const addWatched = (id, idFilm) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.addWatched(id, idFilm);\r\n    dispatch({ type: ADD_WATCHED, payload: data });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\nexport const removeFavorite = (id, idFilm) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.removeFavorite(id, idFilm);\r\n    console.log(data);\r\n    dispatch({ type: REMOVE_FAVORITE, payload: data });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\nexport const setRole = (id) => async (dispatch) => {\r\n  try {\r\n    if (id === \"6034acc0a07a4a22ecd6f0a5\") {\r\n      dispatch({ type: SET_ROLE, payload: \"admin\" });\r\n    } else {\r\n      dispatch({ type: SET_ROLE, payload: \"normal\" });\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n","E:\\MyApp\\Github\\NodeProject\\teamovies\\client\\src\\components\\Header\\Header.jsx",[],"E:\\MyApp\\Github\\NodeProject\\teamovies\\client\\src\\pages\\Home\\Home.jsx",[],"E:\\MyApp\\Github\\NodeProject\\teamovies\\client\\src\\components\\Footer\\Footer.jsx",[],"E:\\MyApp\\Github\\NodeProject\\teamovies\\client\\src\\reducers\\user.reducer.js",["306","307","308"],"import {\r\n  LOGIN,\r\n  REGISTER,\r\n  DELETE_USER,\r\n  GET_USER,\r\n  LOGOUT,\r\n  CHECK_LOGIN,\r\n  LOGIN_GOOGLE,\r\n  ADD_WATCHED,\r\n  ADD_FAVORITE,\r\n  REMOVE_FAVORITE,\r\n  SET_ROLE,\r\n} from \"../constants/actionTypes\";\r\n\r\nexport default (userState = { user: {}, token: null, role: null }, action) => {\r\n  switch (action.type) {\r\n    case LOGIN:\r\n    case LOGIN_GOOGLE:\r\n    case REGISTER:\r\n      return action.payload;\r\n    case LOGOUT:\r\n      return { user: {}, token: null };\r\n    case CHECK_LOGIN:\r\n      return { user: action.payload.data, token: action.payload.token };\r\n    case ADD_FAVORITE:\r\n    case ADD_WATCHED:\r\n    case REMOVE_FAVORITE:\r\n      return { ...userState, user: action.payload };\r\n    case SET_ROLE:\r\n      return { ...userState, role: action.payload };\r\n    default:\r\n      return userState;\r\n  }\r\n};\r\n","E:\\MyApp\\Github\\NodeProject\\teamovies\\client\\src\\constants\\actionTypes.js",[],"E:\\MyApp\\Github\\NodeProject\\teamovies\\client\\src\\components\\Header\\Nav\\Nav.jsx",["309"],"import React, { useEffect } from \"react\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport \"./Nav.scss\";\r\n\r\nconst Nav = ({ showNav, setShowNav }) => {\r\n  const history = useHistory();\r\n  const location = useLocation().pathname;\r\n  const user = useSelector((state) => state.users.user);\r\n  const role = useSelector((state) => state.users.role);\r\n\r\n  useEffect(() => {\r\n    const handleEvent = (e) => {\r\n      if (e.target.classList.contains(\"bold\") || e.target.classList.contains(\"ul\")) {\r\n        setShowNav(false);\r\n      }\r\n    };\r\n    window.addEventListener(\"click\", handleEvent);\r\n    return () => window.removeEventListener(\"click\", handleEvent);\r\n  }, []);\r\n  return (\r\n    <nav className={`nav ${showNav ? \"show\" : \"\"}`}>\r\n      <ul className=\"ul\">\r\n        <li className={`bold ${location === \"/oddfilm\" ? \"active\" : \"\"}`} onClick={() => history.push(\"/oddfilm\")}>\r\n          Phim Lẻ\r\n        </li>\r\n        <li\r\n          className={`bold ${location === \"/seriesfilm\" ? \"active\" : \"\"}`}\r\n          onClick={() => history.push(\"/seriesfilm\")}\r\n        >\r\n          Phim Bộ\r\n        </li>\r\n        {role === \"admin\" && (\r\n          <li className={`bold ${location === \"/manager\" ? \"active\" : \"\"}`} onClick={() => history.push(\"/manager\")}>\r\n            Quản Lý Phim\r\n          </li>\r\n        )}\r\n        <li className={`bold ${location === \"/account\" ? \"active\" : \"\"}`} onClick={() => history.push(\"/account\")}>\r\n          {user?._id ? (\r\n            <div className=\"account bold\">\r\n              <img\r\n                src={\r\n                  user.photoURL ||\r\n                  \"https://lh3.googleusercontent.com/TuW_5qbJjB2LNHCs5ZfernjesNw936Bda_2mdRC4ruDtZVIxl5TST8ykOHbkcBBEcg=s250\"\r\n                }\r\n                alt=\"avatar\"\r\n                className=\"avatar bold\"\r\n              />\r\n              <p className=\"bold\">{user.displayName}</p>\r\n            </div>\r\n          ) : (\r\n            \"Tài Khoản\"\r\n          )}\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","E:\\MyApp\\Github\\NodeProject\\teamovies\\client\\src\\components\\Search\\Search.jsx",["310"],"import React, { useState } from \"react\";\r\nimport \"./Search.scss\";\r\nconst Search = ({ value, setValue }) => {\r\n  return (\r\n    <div className=\"search-container\">\r\n      <form>\r\n        <input\r\n          type=\"text\"\r\n          value={value}\r\n          onChange={(e) => setValue(e.target.value)}\r\n          placeholder=\"Bạn muốn tìm phim gì...\"\r\n        />\r\n        <button className=\"submit-btn\" type=\"submit\">\r\n          Tìm Kiếm\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","E:\\MyApp\\Github\\NodeProject\\teamovies\\client\\src\\components\\Home\\RightContent\\RightContent.jsx",[],"E:\\MyApp\\Github\\NodeProject\\teamovies\\client\\src\\components\\Home\\LeftContent\\LeftContent.jsx",[],"E:\\MyApp\\Github\\NodeProject\\teamovies\\client\\src\\components\\utils\\ListFilm\\ListFilm.jsx",[],"E:\\MyApp\\Github\\NodeProject\\teamovies\\client\\src\\components\\utils\\ListFilm\\Film\\Film.jsx",[],"E:\\MyApp\\Github\\NodeProject\\teamovies\\client\\src\\components\\utils\\Stars\\Stars.jsx",[],"E:\\MyApp\\Github\\NodeProject\\teamovies\\client\\src\\apis\\index.js",[],"E:\\MyApp\\Github\\NodeProject\\teamovies\\client\\src\\apis\\axios.js",[],"E:\\MyApp\\Github\\NodeProject\\teamovies\\client\\src\\pages\\Login\\Login.jsx",["311","312","313"],"import React, { useState, useEffect } from \"react\";\r\nimport { ImGooglePlus } from \"react-icons/im\";\r\nimport { HiEye, HiHeart } from \"react-icons/hi\";\r\nimport { GiPopcorn } from \"react-icons/gi\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport GoogleLogin from \"react-google-login\";\r\nimport { FcGoogle } from \"react-icons/fc\";\r\nimport FileBase from \"react-file-base64\";\r\n\r\nimport { loginUser, logoutUser, registerUser, loginGoogle } from \"../../actions/user.action\";\r\nimport { getFavorites, getWatched } from \"../../actions/film.action\";\r\n\r\nimport ListFilm from \"../../components/utils/ListFilm/ListFilm\";\r\n\r\nimport \"./Login.scss\";\r\n\r\nconst Login = () => {\r\n  const [cookies, setCookies] = useCookies([\"user\"]);\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.users.user);\r\n  const favorites = useSelector((state) => state.films.favorites);\r\n  const watched = useSelector((state) => state.films.watched);\r\n  const [active, setActive] = useState(\"heart\");\r\n  const [isLogin, setIsLogin] = useState(true);\r\n  const [userData, setUserData] = useState({ email: \"\", password: \"\" });\r\n  const [dataReg, setDataReg] = useState({\r\n    email: \"\",\r\n    displayName: \"\",\r\n    password: \"\",\r\n    photoURL: null,\r\n    passwordCheck: \"\",\r\n  });\r\n\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    if (user) {\r\n      dispatch(getFavorites(user._id));\r\n      dispatch(getWatched(user._id));\r\n    }\r\n  }, [user]);\r\n  const handleSuccess = async (res) => {\r\n    const { name, imageUrl, email, googleId } = res.profileObj;\r\n    const token = res.tokenId;\r\n    dispatch(loginGoogle({ name, imageUrl, googleId, email, token }, setCookies));\r\n    history.push(\"/\");\r\n  };\r\n  const handleFailure = () => {\r\n    alert(\"Some errors were occur when login\");\r\n  };\r\n  const handleClickLogout = async () => {\r\n    await setCookies(\"user\", \"\", { path: \"/\" });\r\n    dispatch(logoutUser());\r\n    history.push(\"/account\");\r\n  };\r\n  const handleOnchangeLogin = (e) => {\r\n    setUserData({ ...userData, [e.target.name]: e.target.value });\r\n  };\r\n  const handleOnchangeRegister = (e) => {\r\n    setDataReg({ ...dataReg, [e.target.name]: e.target.value });\r\n  };\r\n  const handleSubmitLogin = async (e) => {\r\n    e.preventDefault();\r\n    if (userData.email !== \"\" && userData.password !== \"\") {\r\n      try {\r\n        const message = await dispatch(loginUser(userData, setCookies));\r\n        if (!message) {\r\n          history.push(\"/\");\r\n        } else {\r\n          alert(message);\r\n        }\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    } else {\r\n      alert(\"must fill in full fields\");\r\n    }\r\n    setUserData({ email: \"\", password: \"\" });\r\n  };\r\n  const handleSubmitRegister = (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      dataReg.displayName !== \"\" &&\r\n      dataReg.email !== \"\" &&\r\n      dataReg.password !== \"\" &&\r\n      dataReg.photoURL !== \"\" &&\r\n      dataReg.passwordCheck !== \"\"\r\n    ) {\r\n      dispatch(registerUser(dataReg, setCookies));\r\n    } else {\r\n      alert(\"Please Fill in full fields\");\r\n    }\r\n    setDataReg({ email: \"\", displayName: \"\", password: \"\", photoURL: null, passwordCheck: \"\" });\r\n  };\r\n  if (user._id) {\r\n    return (\r\n      <section className=\"account\">\r\n        <button className=\"logout-btn\" onClick={handleClickLogout}>\r\n          Đăng Xuất\r\n        </button>\r\n        <div className=\"btn-group\">\r\n          <button className={`add-fav ${active === \"heart\" ? \"active\" : \"\"}`} onClick={() => setActive(\"heart\")}>\r\n            <HiHeart /> Yêu Thích\r\n          </button>\r\n          <button className={`watch ${active === \"eye\" ? \"active\" : \"\"}`} onClick={() => setActive(\"eye\")}>\r\n            <HiEye /> Đã Xem\r\n          </button>\r\n        </div>\r\n        <ListFilm type=\"row\" films={active === \"heart\" ? favorites : watched} />\r\n      </section>\r\n    );\r\n  }\r\n  return (\r\n    <section className=\"login\">\r\n      <div className=\"login\">\r\n        <div className=\"logo\">\r\n          <GiPopcorn className=\"icon-logo\" />\r\n          <span className=\"bold orange-text\">TEA </span> MOVIES\r\n        </div>\r\n        <p className=\"title\">Đăng nhập để trải nghiệm tốt hơn</p>\r\n        <div className=\"btn-group\">\r\n          {!isLogin && (\r\n            <button className=\"btn-login\" onClick={() => setIsLogin(true)}>\r\n              Đăng Nhập\r\n            </button>\r\n          )}\r\n          {isLogin && (\r\n            <button className=\"btn-register\" onClick={() => setIsLogin(false)}>\r\n              Đăng Ký\r\n            </button>\r\n          )}\r\n        </div>\r\n        {isLogin ? (\r\n          <form onSubmit={handleSubmitLogin}>\r\n            <label htmlFor=\"email\" className=\"text-input\">\r\n              <input\r\n                type=\"text\"\r\n                name=\"email\"\r\n                id=\"email\"\r\n                value={userData.email}\r\n                onChange={handleOnchangeLogin}\r\n                placeholder=\"Email\"\r\n              />\r\n            </label>\r\n            <label htmlFor=\"password\" className=\"text-input\">\r\n              <input\r\n                type=\"password\"\r\n                name=\"password\"\r\n                id=\"password\"\r\n                value={userData.password}\r\n                onChange={handleOnchangeLogin}\r\n                placeholder=\"Password\"\r\n              />\r\n            </label>\r\n            <button type=\"submit\" className=\"btn-submit\">\r\n              Đăng Nhập\r\n            </button>\r\n          </form>\r\n        ) : (\r\n          <form onSubmit={handleSubmitRegister}>\r\n            <label htmlFor=\"emailReg\" className=\"text-input\">\r\n              <input\r\n                type=\"text\"\r\n                name=\"email\"\r\n                id=\"emailReg\"\r\n                value={dataReg.email}\r\n                onChange={handleOnchangeRegister}\r\n                placeholder=\"Email\"\r\n              />\r\n            </label>\r\n            <label htmlFor=\"passwordReg\" className=\"text-input\">\r\n              <input\r\n                type=\"password\"\r\n                name=\"password\"\r\n                id=\"passwordReg\"\r\n                value={dataReg.password}\r\n                onChange={handleOnchangeRegister}\r\n                placeholder=\"Password\"\r\n              />\r\n            </label>\r\n            <label htmlFor=\"passwordRegCheck\" className=\"text-input\">\r\n              <input\r\n                type=\"password\"\r\n                name=\"passwordCheck\"\r\n                id=\"passwordRegCheck\"\r\n                value={dataReg.passwordCheck}\r\n                onChange={handleOnchangeRegister}\r\n                placeholder=\"Password\"\r\n              />\r\n            </label>\r\n            <label htmlFor=\"displayName\" className=\"text-input\">\r\n              <input\r\n                type=\"text\"\r\n                name=\"displayName\"\r\n                id=\"displayName\"\r\n                value={dataReg.displayName}\r\n                onChange={handleOnchangeRegister}\r\n                placeholder=\"Họ Tên\"\r\n              />\r\n            </label>\r\n            <label htmlFor=\"photo-url\" className=\"photo-url\">\r\n              <FileBase\r\n                type=\"file\"\r\n                id=\"photo-url\"\r\n                onDone={({ base64 }) => setDataReg({ ...dataReg, photoURL: base64 })}\r\n                multiple={false}\r\n              />\r\n            </label>\r\n            <button type=\"submit\" className=\"btn-submit-register\">\r\n              Đăng Ký\r\n            </button>\r\n          </form>\r\n        )}\r\n\r\n        <GoogleLogin\r\n          clientId=\"467571315756-vigfi3qh89vvgbeqhduotlr2jso13gl5.apps.googleusercontent.com\"\r\n          onSuccess={handleSuccess}\r\n          onFailure={handleFailure}\r\n          cookiePolicy=\"single_host_origin\"\r\n          render={(props) => (\r\n            <button className=\"login-btn\" onClick={props.onClick} disabled={props.disabled}>\r\n              <ImGooglePlus className=\"icon\" /> Đăng Nhập Bằng Google\r\n            </button>\r\n          )}\r\n        />\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","E:\\MyApp\\Github\\NodeProject\\teamovies\\client\\src\\pages\\Manager\\Manager.jsx",["314"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./Manager.scss\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { createFilm, updateFilm, setIsEdit } from \"../../actions/film.action\";\r\n\r\nconst Manager = () => {\r\n  const dispatch = useDispatch();\r\n  const film = useSelector((state) => state.films.film);\r\n  const role = useSelector((state) => state.users.role);\r\n  const isEdit = useSelector((state) => state.films.isEdit);\r\n\r\n  const [filmData, setFilmData] = useState({\r\n    title: \"\",\r\n    url: \"\",\r\n    image: \"\",\r\n    stars: \"\",\r\n    category: \"\",\r\n    episode: \"\",\r\n    directors: \"\",\r\n    country: \"\",\r\n    description: \"\",\r\n    createAt: \"date\",\r\n    upComing: \"\",\r\n    evaluate: 10,\r\n    isMultiEp: \"\",\r\n  });\r\n  useEffect(() => {\r\n    if (isEdit) {\r\n      setFilmData(film);\r\n    }\r\n  }, []);\r\n  const handleChange = (e) => {\r\n    setFilmData({ ...filmData, [e.target.name]: e.target.value });\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (Object.values(filmData).every((item) => item !== \"\")) {\r\n      const regex = /youtube.com\\/watch\\?v=/g;\r\n      if (isEdit) {\r\n        dispatch(\r\n          updateFilm(isEdit, {\r\n            ...filmData,\r\n            url: filmData.url.match(regex) ? filmData.url.replace(regex, \"youtube.com/embed/\") : filmData.url,\r\n          })\r\n        );\r\n      } else {\r\n        dispatch(\r\n          createFilm({\r\n            ...filmData,\r\n            url: filmData.url.match(regex) ? filmData.url.replace(regex, \"youtube.com/embed/\") : filmData.url,\r\n          })\r\n        );\r\n      }\r\n\r\n      setFilmData({\r\n        title: \"\",\r\n        url: \"\",\r\n        image: \"\",\r\n        stars: \"\",\r\n        category: \"\",\r\n        episode: \"\",\r\n        directors: \"\",\r\n        country: \"\",\r\n        description: \"\",\r\n        createAt: \"date\",\r\n        upComing: \"\",\r\n        evaluate: 10,\r\n        isMultiEp: \"\",\r\n      });\r\n      dispatch(setIsEdit(null));\r\n      window.scrollTo({ top: 0, left: 0 });\r\n    } else {\r\n      alert(\"Phải điền đầy đủ các trường !\");\r\n    }\r\n  };\r\n  if (role !== \"admin\") return <h1>Page not found</h1>;\r\n  return (\r\n    <section className=\"manager\">\r\n      <div className=\"form-input\">\r\n        <form onSubmit={handleSubmit}>\r\n          <label htmlFor=\"url\" className=\"text-input\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"url\"\r\n              id=\"url\"\r\n              value={filmData.url}\r\n              onChange={handleChange}\r\n              placeholder=\"Đường dẫn video phim (ví dụ : https://video-phim-hay.mp4)\"\r\n            />\r\n          </label>\r\n          <label htmlFor=\"title\" className=\"text-input\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"title\"\r\n              id=\"title\"\r\n              value={filmData.title}\r\n              onChange={handleChange}\r\n              placeholder=\"Tên Phim (ví dụ : Gái Già Lắm Chiêu)\"\r\n            />\r\n          </label>\r\n          <label htmlFor=\"image\" className=\"text-input\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"image\"\r\n              id=\"image\"\r\n              value={filmData.image}\r\n              onChange={handleChange}\r\n              placeholder=\"Đường dẫn ảnh đại diện phim  (ví dụ : https://image-phim-hay.jpg)\"\r\n            />\r\n          </label>\r\n          <label htmlFor=\"stars\" className=\"text-input\">\r\n            <input\r\n              type=\"number\"\r\n              name=\"stars\"\r\n              id=\"stars\"\r\n              value={filmData.stars}\r\n              onChange={handleChange}\r\n              placeholder=\"Số sao của phim (ví dụ: 4)\"\r\n              min=\"1\"\r\n              max=\"5\"\r\n            />\r\n          </label>\r\n          <label htmlFor=\"category\" className=\"text-input\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"category\"\r\n              id=\"category\"\r\n              value={filmData.category}\r\n              onChange={handleChange}\r\n              placeholder=\"Thể loại phim (ví dụ: Phim ngôn tình)\"\r\n            />\r\n          </label>\r\n          <label htmlFor=\"episode\" className=\"text-input\">\r\n            <input\r\n              type=\"number\"\r\n              name=\"episode\"\r\n              id=\"episode\"\r\n              value={filmData.episode}\r\n              onChange={handleChange}\r\n              placeholder=\"Số tập phim (ví dụ : 3)\"\r\n              min=\"1\"\r\n            />\r\n          </label>\r\n          <label htmlFor=\"directors\" className=\"text-input\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"directors\"\r\n              id=\"directors\"\r\n              value={filmData.directors}\r\n              onChange={handleChange}\r\n              placeholder=\"Đạo diễn (ví dụ: Fujitora)\"\r\n            />\r\n          </label>\r\n          <label htmlFor=\"country\" className=\"text-input\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"country\"\r\n              id=\"country\"\r\n              value={filmData.country}\r\n              onChange={handleChange}\r\n              placeholder=\"Nước sản xuất (ví dụ : Việt Nam)\"\r\n            />\r\n          </label>\r\n          <label htmlFor=\"description\" className=\"text-input\">\r\n            <textarea\r\n              type=\"text\"\r\n              name=\"description\"\r\n              id=\"description\"\r\n              value={filmData.description}\r\n              onChange={handleChange}\r\n              placeholder=\"Mô tả phim (ví dụ : Cua Lại Vợ Bầu là một phim lẻ thuộc thể loại Hài hước nhưng không kém phần cảm xúc , nhiều lúc làm người xem phải khóc theo. Phim được thực hiện bởi đạo diễn Nhất Trung. Một đạo diễn rất nổi tiếng mà chắc hẳn fan của Phim Việt Nam chắc ai cũng biết. Phim với sự tham gia của dàn diễn viên nổi tiếng Showbiz Việt như Trấn Thành...)\"\r\n              rows=\"10\"\r\n            />\r\n          </label>\r\n          <div className=\"radio-group\">\r\n            <label className=\"radio-input\">\r\n              <input\r\n                type=\"radio\"\r\n                name=\"upComing\"\r\n                checked={filmData.upComing === \"false\"}\r\n                value=\"false\"\r\n                onChange={handleChange}\r\n              />{\" \"}\r\n              Đã ra mắt\r\n            </label>\r\n            <label className=\"radio-input\">\r\n              <input\r\n                type=\"radio\"\r\n                name=\"upComing\"\r\n                checked={filmData.upComing === \"true\"}\r\n                value=\"true\"\r\n                onChange={handleChange}\r\n              />{\" \"}\r\n              Chưa ra mắt\r\n            </label>\r\n          </div>\r\n          <div className=\"radio-group\">\r\n            <label className=\"radio-input\">\r\n              <input\r\n                type=\"radio\"\r\n                name=\"isMultiEp\"\r\n                checked={filmData.isMultiEp === \"false\"}\r\n                value=\"false\"\r\n                onChange={handleChange}\r\n              />{\" \"}\r\n              Phim Lẻ\r\n            </label>\r\n            <label className=\"radio-input\">\r\n              <input\r\n                type=\"radio\"\r\n                name=\"isMultiEp\"\r\n                checked={filmData.isMultiEp === \"true\"}\r\n                value=\"true\"\r\n                onChange={handleChange}\r\n              />{\" \"}\r\n              Phim Bộ\r\n            </label>\r\n          </div>\r\n          <button type=\"submit\" className=\"submit-btn\">\r\n            {isEdit ? \"Cập Nhật Phim\" : \"Thêm Phim\"}\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Manager;\r\n","E:\\MyApp\\Github\\NodeProject\\teamovies\\client\\src\\pages\\OddFilm\\OddFilm.jsx",[],"E:\\MyApp\\Github\\NodeProject\\teamovies\\client\\src\\pages\\SeriesFilm\\SeriesFilm.jsx",[],"E:\\MyApp\\Github\\NodeProject\\teamovies\\client\\src\\pages\\Film\\Film.jsx",["315"],"import React, { useState, useEffect } from \"react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { BsTagFill } from \"react-icons/bs\";\r\nimport { HiHeart, HiEye } from \"react-icons/hi\";\r\nimport { BiEdit } from \"react-icons/bi\";\r\nimport { FaTrash } from \"react-icons/fa\";\r\n\r\nimport { getSingleFilm, setIsEdit, removeFilm } from \"../../actions/film.action\";\r\nimport { addFavorite, addWatched, removeFavorite } from \"../../actions/user.action\";\r\nimport \"./Film.scss\";\r\nimport Stars from \"../../components/utils/Stars/Stars\";\r\nimport ListFilm from \"../../components/utils/ListFilm/ListFilm\";\r\nimport ModalFilm from \"../../components/Modal/ModalFilm\";\r\n\r\nconst Film = () => {\r\n  const [modal, setModal] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.users.user);\r\n  const role = useSelector((state) => state.users.role);\r\n  const film = useSelector((state) => state.films.film);\r\n  const films = useSelector((state) => state.films.films);\r\n  const { id } = useParams();\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    dispatch(getSingleFilm(id));\r\n    window.scrollTo({ top: 0, left: 0 });\r\n  }, [id]);\r\n\r\n  const handleFav = () => {\r\n    if (user?.favorites?.find((item) => item === film.createdAt)) {\r\n      dispatch(removeFavorite(user._id, film.createdAt));\r\n    } else {\r\n      dispatch(addFavorite(user._id, film.createdAt));\r\n    }\r\n  };\r\n  const handleWatch = () => {\r\n    if (!user?.watched?.find((item) => item === film.createdAt)) {\r\n      setModal(!modal);\r\n      dispatch(addWatched(user._id, film.createdAt));\r\n    } else if (!user) {\r\n      history.push(\"/account\");\r\n      alert(\"Phải Đăng Nhập Để Xem !\");\r\n    } else if (user) {\r\n      setModal(!modal);\r\n    }\r\n  };\r\n  const handleEdit = () => {\r\n    dispatch(setIsEdit(id));\r\n    history.push(\"/manager\");\r\n  };\r\n  const handleRemove = () => {\r\n    dispatch(removeFilm(id));\r\n    history.push(\"/\");\r\n  };\r\n  if (!film) return <></>;\r\n  return (\r\n    <section className=\"film\">\r\n      {modal && <ModalFilm setModal={setModal} url={film.url} />}\r\n      <div className=\"film__introduce\">\r\n        <div className=\"film__introduce-left\">\r\n          <img src={film.image} alt={film.title} />\r\n        </div>\r\n        <div className=\"film__introduce-right\">\r\n          <h3 className=\"title\">{film.title}</h3>\r\n          <div className=\"evaluate\">\r\n            <Stars stars={film.stars * 1} />\r\n            <p>\r\n              <BsTagFill className=\"icon-tag\" />\r\n              {film.category}\r\n            </p>\r\n          </div>\r\n          <div className=\"btn-group\">\r\n            <button\r\n              className={`add-fav ${user?.favorites?.find((item) => item === film.createdAt) ? \"disable\" : \"\"}`}\r\n              onClick={handleFav}\r\n            >\r\n              <HiHeart /> {user?.favorites?.find((item) => item === film.createdAt) ? \"Hủy Thích\" : \"Yêu Thích\"}\r\n            </button>\r\n\r\n            <button className=\"watch\" onClick={handleWatch}>\r\n              <HiEye /> {film.upComing === \"false\" ? \"Xem Phim\" : \"Trailer\"}\r\n            </button>\r\n\r\n            {role === \"admin\" && (\r\n              <>\r\n                <button className=\"watch\" onClick={handleEdit}>\r\n                  <BiEdit /> Cập Nhật\r\n                </button>\r\n                <button className=\"add-fav\" onClick={handleRemove}>\r\n                  <FaTrash /> Xóa Phim\r\n                </button>\r\n              </>\r\n            )}\r\n          </div>\r\n          <div className=\"details-option\">\r\n            <p>\r\n              <span className=\"bold\">Trạng thái:</span>\r\n              <span className=\"orange-text\"> {film.upComing === \"true\" ? \"Chưa ra mắt\" : \"Hoàn tất\"}</span>\r\n            </p>\r\n            <p>\r\n              <span className=\"bold\">Đạo diễn:</span> <span className=\"orange-text\">{film.directors},</span>\r\n            </p>\r\n            <p>\r\n              <span className=\"bold\">Quốc gia:</span> <span className=\"orange-text\">{film.country},</span>\r\n            </p>\r\n            <p>\r\n              <span className=\"bold\">Năm:</span> <span className=\"orange-text\">2020</span>\r\n            </p>\r\n            <p>\r\n              <span className=\"bold\">Thời lượng:</span>{\" \"}\r\n              <span className=\"orange-text\">{film.isMultiEp === \"true\" ? \"45\" : \"90\"} phút/tập</span>\r\n            </p>\r\n            <p>\r\n              <span className=\"bold\">Số tập:</span> <span className=\"orange-text\">{film.episode} tập</span>\r\n            </p>\r\n            <p>\r\n              <span className=\"bold\">Chất lượng:</span> <span className=\"orange-text\">Bản đẹp</span>\r\n            </p>\r\n            <p>\r\n              <span className=\"bold\">Độ phân giải:</span> <span className=\"orange-text\">HD 720p</span>\r\n            </p>\r\n            <p>\r\n              <span className=\"bold\">Ngôn ngữ:</span> <span className=\"orange-text\">Phụ đề Việt</span>\r\n            </p>\r\n            <p>\r\n              <span className=\"bold\">Thể loại:</span> <span className=\"orange-text\">{film.category}</span>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"film__detail\">{film.description}</div>\r\n      <ListFilm type=\"row\" films={films.filter((item) => item.isMultiEp === film.isMultiEp && item._id !== film._id)} />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Film;\r\n","E:\\MyApp\\Github\\NodeProject\\teamovies\\client\\src\\components\\Modal\\ModalFilm.jsx",["316"],"import React from \"react\";\r\nimport \"./ModalFilm.scss\";\r\nimport { FaTimes } from \"react-icons/fa\";\r\nconst ModalFilm = ({ setModal, url }) => {\r\n  return (\r\n    <section className=\"modal-film-overlay\">\r\n      <button className=\"close-modal\" onClick={() => setModal(false)}>\r\n        <FaTimes /> Đóng\r\n      </button>\r\n      <iframe src={url} allowFullScreen className=\"film\"></iframe>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default ModalFilm;\r\n","E:\\MyApp\\Github\\NodeProject\\teamovies\\client\\src\\reducers\\film.reducer.js",["317"],"import {\r\n  CREATE_FILM,\r\n  GET_FILMS,\r\n  GET_SINGLE_FILM,\r\n  UPDATE_FILM,\r\n  REMOVE_FILM,\r\n  SET_IS_EDIT,\r\n  GET_FAVORITES,\r\n  GET_WATCHED,\r\n} from \"../constants/actionTypes\";\r\n\r\nexport default (state = { films: [], isEdit: null, favorites: [], watched: [], film: null }, action) => {\r\n  switch (action.type) {\r\n    case CREATE_FILM:\r\n      return { ...state, films: [...state.films, action.payload] };\r\n    case GET_FILMS:\r\n      return { ...state, films: action.payload };\r\n    case SET_IS_EDIT:\r\n      return { ...state, isEdit: action.payload };\r\n    case GET_FAVORITES:\r\n      return { ...state, favorites: action.payload };\r\n    case GET_WATCHED:\r\n      return { ...state, watched: action.payload };\r\n    case GET_SINGLE_FILM:\r\n      return { ...state, film: action.payload };\r\n    case REMOVE_FILM:\r\n      return { ...state, films: state.films.filter((film) => film._id !== action.payload._id) };\r\n    case UPDATE_FILM:\r\n      return { ...state, films: state.films.map((film) => (film._id === action.payload._id ? action.payload : film)) };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","E:\\MyApp\\Github\\NodeProject\\teamovies\\client\\src\\actions\\film.action.js",[],"E:\\MyApp\\Github\\JavaProject\\spring\\project\\phim_pro_client\\src\\index.js",[],["318","319"],"E:\\MyApp\\Github\\JavaProject\\spring\\project\\phim_pro_client\\src\\App.jsx",["320","321"],"import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\nimport { checkLogin, setRole } from \"./actions/user.action\";\r\nimport { getFilms } from \"./actions/film.action\";\r\n\r\nimport \"./scss/index.scss\";\r\nimport Home from \"./pages/Home/Home\";\r\nimport Login from \"./pages/Login/Login\";\r\nimport Film from \"./pages/Film/Film\";\r\nimport Manager from \"./pages/Manager/Manager\";\r\nimport OddFilm from \"./pages/OddFilm/OddFilm\";\r\nimport SeriesFilm from \"./pages/SeriesFilm/SeriesFilm\";\r\nimport Header from \"./components/Header/Header\";\r\nimport Footer from \"./components/Footer/Footer\";\r\nimport Payment from \"pages/Payment/Payment\";\r\nimport VnPayReturn from \"pages/VnPayReturn/VnPayReturn\";\r\n\r\nconst App = () => {\r\n  const dispatch = useDispatch();\r\n  const role = useSelector((state) => state.users.role);\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"isLoggedIn\")) {\r\n      dispatch(checkLogin());\r\n    }\r\n    dispatch(getFilms());\r\n  }, []);\r\n  useEffect(() => {\r\n    dispatch(setRole(role));\r\n  }, [role]);\r\n  return (\r\n    <div className=\"app\">\r\n      <Router>\r\n        <Header />\r\n        <section className=\"app__content\">\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Home} />\r\n            <Route path=\"/oddfilm\" component={OddFilm} />\r\n            <Route path=\"/seriesfilm\" component={SeriesFilm} />\r\n            <Route path=\"/account\" exact component={Login} />\r\n            <Route path=\"/account/payment\" component={Payment} />\r\n            <Route path=\"/payment/result\" component={VnPayReturn} />\r\n            <Route path=\"/manager\" component={Manager} />\r\n            <Route path=\"/film/:id\" component={Film} />\r\n          </Switch>\r\n        </section>\r\n        <Footer />\r\n      </Router>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","E:\\MyApp\\Github\\JavaProject\\spring\\project\\phim_pro_client\\src\\reducers\\index.js",[],"E:\\MyApp\\Github\\JavaProject\\spring\\project\\phim_pro_client\\src\\actions\\user.action.js",["322","323","324"],"import {\r\n  LOGIN,\r\n  REGISTER,\r\n  UPDATE_AVATAR,\r\n  GET_USER,\r\n  LOGOUT,\r\n  CHECK_LOGIN,\r\n  LOGIN_GOOGLE,\r\n  ADD_FAVORITE,\r\n  ADD_WATCHED,\r\n  REMOVE_FAVORITE,\r\n  SET_ROLE,\r\n} from \"../constants/actionTypes\";\r\nimport * as api from \"../apis\";\r\n\r\nexport const registerUser = (user) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.registerUser({\r\n      username: user.username,\r\n      password: user.password,\r\n      name: user.name,\r\n      email: user.email,\r\n    });\r\n\r\n    return data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\nexport const loginUser = (user) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.loginUser({ username: user.username, password: user.password });\r\n\r\n    dispatch({ type: LOGIN, payload: data });\r\n  } catch (error) {\r\n    return error.response.data.message;\r\n  }\r\n};\r\nexport const logoutUser = () => (dispatch) => {\r\n  try {\r\n    dispatch({ type: LOGOUT });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\nexport const checkLogin = () => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.checkLogin();\r\n\r\n    dispatch({ type: LOGIN, payload: data });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\nexport const updateAvatar = (avatar) => async (dispatch) => {\r\n  try {\r\n    await api.updateAvatar(avatar);\r\n\r\n    dispatch({ type: UPDATE_AVATAR, payload: avatar.avatar });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\nexport const loginGoogle = (user) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.loginGoogle(user);\r\n    dispatch({ type: LOGIN_GOOGLE, payload: data });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\nexport const addFavorite = (idFilm) => async (dispatch) => {\r\n  try {\r\n    await api.addFavorite(idFilm);\r\n    dispatch({ type: ADD_FAVORITE, payload: idFilm });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\nexport const addWatched = (idFilm) => async (dispatch) => {\r\n  try {\r\n    await api.addWatched(idFilm);\r\n    dispatch({ type: ADD_WATCHED, payload: idFilm });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\nexport const removeFavorite = (idFilm) => async (dispatch) => {\r\n  try {\r\n    await api.removeFavorite(idFilm);\r\n    dispatch({ type: REMOVE_FAVORITE, payload: idFilm });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\nexport const setRole = (role) => async (dispatch) => {\r\n  dispatch({ type: SET_ROLE, payload: role });\r\n};\r\n","E:\\MyApp\\Github\\JavaProject\\spring\\project\\phim_pro_client\\src\\actions\\film.action.js",[],"E:\\MyApp\\Github\\JavaProject\\spring\\project\\phim_pro_client\\src\\pages\\Login\\Login.jsx",["325","326","327"],"import React, { useState, useEffect } from \"react\";\r\nimport { HiEye, HiHeart } from \"react-icons/hi\";\r\nimport { GiPopcorn } from \"react-icons/gi\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { loginUser, logoutUser, registerUser, loginGoogle, updateAvatar } from \"actions/user.action\";\r\nimport { getFavorites, getWatched } from \"actions/film.action\";\r\n\r\nimport ListFilm from \"components/utils/ListFilm/ListFilm\";\r\nimport storage from \"apis/firebase\";\r\n\r\nimport \"./Login.scss\";\r\n\r\nconst Login = () => {\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.users);\r\n  const favorites = useSelector((state) => state.films.favorites);\r\n  const watched = useSelector((state) => state.films.watched);\r\n  const [active, setActive] = useState(\"heart\");\r\n  const [isLogin, setIsLogin] = useState(true);\r\n  const [userData, setUserData] = useState({ username: \"\", password: \"\" });\r\n  const [dataReg, setDataReg] = useState({\r\n    email: \"\",\r\n    username: \"\",\r\n    name: \"\",\r\n    password: \"\",\r\n    passwordCheck: \"\",\r\n  });\r\n  const [modalAvatar, setModalAvatar] = useState(false);\r\n  const [image, setImage] = useState(\"\");\r\n  const [progress, setProgress] = useState(0);\r\n\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    if (user.username) {\r\n      dispatch(getFavorites());\r\n      dispatch(getWatched());\r\n    }\r\n  }, [user.username]);\r\n  const handleSuccess = async (res) => {\r\n    const { name, imageUrl, email, googleId } = res.profileObj;\r\n    const token = res.tokenId;\r\n    dispatch(loginGoogle({ name, imageUrl, googleId, email, token }));\r\n    history.push(\"/\");\r\n  };\r\n  const handleFailure = () => {\r\n    alert(\"Some errors were occur when login\");\r\n  };\r\n  const handleClickLogout = async () => {\r\n    dispatch(logoutUser());\r\n    localStorage.removeItem(\"isLoggedIn\");\r\n    history.push(\"/account\");\r\n  };\r\n  const handleOnchangeLogin = (e) => {\r\n    setUserData({ ...userData, [e.target.name]: e.target.value });\r\n  };\r\n  const handleOnchangeRegister = (e) => {\r\n    setDataReg({ ...dataReg, [e.target.name]: e.target.value });\r\n  };\r\n  const handleSubmitLogin = async (e) => {\r\n    e.preventDefault();\r\n    if (userData.username !== \"\" && userData.password !== \"\") {\r\n      try {\r\n        const message = await dispatch(loginUser(userData));\r\n        if (!message) {\r\n          localStorage.setItem(\"isLoggedIn\", \"1\");\r\n          history.push(\"/\");\r\n        } else {\r\n          alert(message);\r\n        }\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    } else {\r\n      alert(\"must fill in full fields\");\r\n    }\r\n    setUserData({ email: \"\", password: \"\" });\r\n  };\r\n  const handleSubmitRegister = async (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      dataReg.name !== \"\" &&\r\n      dataReg.username !== \"\" &&\r\n      dataReg.email !== \"\" &&\r\n      dataReg.password !== \"\" &&\r\n      dataReg.passwordCheck !== \"\" &&\r\n      dataReg.passwordCheck === dataReg.password &&\r\n      userData.password.match(/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%^&+=])(?=.*[0-9])[0-9a-zA-Z]{8,}$/)\r\n    ) {\r\n      if (dataReg.password.length >= 5 && dataReg.username.length >= 5) {\r\n        const mess = await dispatch(registerUser(dataReg));\r\n        alert(mess);\r\n      }\r\n    } else {\r\n      alert(\"Please Fill in full fields and correct type\");\r\n    }\r\n    setDataReg({ email: \"\", name: \"\", password: \"\", username: \"\", passwordCheck: \"\" });\r\n  };\r\n  const handleChangeFile = (e) => {\r\n    const value = e.target.files[0];\r\n    if (value) {\r\n      const uploadTask = storage.ref(`avatar/${value.name}`).put(value);\r\n      uploadTask.on(\r\n        \"state_changed\",\r\n        (snapshot) => {\r\n          const progress = Math.round((snapshot.bytesTransferred / snapshot.totalBytes) * 100);\r\n          setProgress(progress);\r\n        },\r\n        (error) => console.log(error),\r\n        () => {\r\n          storage\r\n            .ref(\"avatar\")\r\n            .child(value.name)\r\n            .getDownloadURL()\r\n            .then((url) => {\r\n              setImage(url);\r\n            });\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleChangeAvatar = (e) => {\r\n    e.preventDefault();\r\n    console.log(image);\r\n    if (image) {\r\n      dispatch(updateAvatar({ avatar: image }));\r\n      setModalAvatar(false);\r\n    }\r\n  };\r\n  if (user.username) {\r\n    return (\r\n      <section className=\"account\">\r\n        {modalAvatar && (\r\n          <div className=\"modal-avatar\">\r\n            <form onSubmit={handleChangeAvatar}>\r\n              <button type=\"button\" className=\"logout-btn\" onClick={() => setModalAvatar(false)}>\r\n                <span className=\"child\">Đóng</span>\r\n              </button>\r\n              {image && <img src={image} alt=\"avatar\" />}\r\n              <label htmlFor=\"file\">Chọn ảnh từ máy của bạn:</label>\r\n              {progress > 0 && <span className=\"bold main-clr\">{progress}</span>}\r\n              <input type=\"file\" onChange={handleChangeFile} id=\"file\" />\r\n              <button type=\"submit\" className=\"btn-submit\">\r\n                <span className=\"child\"> Xác nhận</span>\r\n              </button>\r\n            </form>\r\n          </div>\r\n        )}\r\n        <button className=\"logout-btn\" onClick={handleClickLogout}>\r\n          <span className=\"child\"> Đăng Xuất</span>\r\n        </button>\r\n        <button className=\"change-avatar\" onClick={() => setModalAvatar(!modalAvatar)}>\r\n          <span className=\"child\">Thay đổi ảnh đại diện</span>\r\n        </button>\r\n        {user.type !== \"premium\" && (\r\n          <button className=\"upgrade\" onClick={() => history.push(\"/account/payment\")}>\r\n            <span className=\"child\">Nạp lần đầu</span>\r\n          </button>\r\n        )}\r\n        <div className=\"btn-group\">\r\n          <button className={`add-fav ${active === \"heart\" ? \"active\" : \"\"}`} onClick={() => setActive(\"heart\")}>\r\n            <span className=\"child\">\r\n              <HiHeart /> Yêu Thích\r\n            </span>\r\n          </button>\r\n          <button className={`watch ${active === \"eye\" ? \"active\" : \"\"}`} onClick={() => setActive(\"eye\")}>\r\n            <span className=\"child\">\r\n              <HiEye /> Đã Xem\r\n            </span>\r\n          </button>\r\n        </div>\r\n        <ListFilm type=\"row\" films={active === \"heart\" ? favorites : watched} />\r\n      </section>\r\n    );\r\n  }\r\n  return (\r\n    <section className=\"login\">\r\n      <div className=\"login\">\r\n        <div className=\"logo\">\r\n          <GiPopcorn className=\"icon-logo\" />\r\n          <span className=\"bold orange-text\">PHIM</span>PRO\r\n        </div>\r\n        <p className=\"title\">Đăng nhập để trải nghiệm tốt hơn</p>\r\n        <div className=\"btn-group\">\r\n          {!isLogin && (\r\n            <button className=\"btn-login\" onClick={() => setIsLogin(true)}>\r\n              <span className=\"child\"> Đăng Nhập</span>\r\n            </button>\r\n          )}\r\n          {isLogin && (\r\n            <button className=\"btn-register\" onClick={() => setIsLogin(false)}>\r\n              <span className=\"child\"> Đăng Ký</span>\r\n            </button>\r\n          )}\r\n        </div>\r\n        {isLogin ? (\r\n          <form onSubmit={handleSubmitLogin}>\r\n            <label htmlFor=\"username\" className=\"text-input\">\r\n              <input\r\n                type=\"text\"\r\n                name=\"username\"\r\n                id=\"username\"\r\n                value={userData.username}\r\n                onChange={handleOnchangeLogin}\r\n                placeholder=\"User name\"\r\n              />\r\n            </label>\r\n            <label htmlFor=\"password\" className=\"text-input\">\r\n              <input\r\n                type=\"password\"\r\n                name=\"password\"\r\n                id=\"password\"\r\n                value={userData.password}\r\n                onChange={handleOnchangeLogin}\r\n                placeholder=\"Password\"\r\n              />\r\n            </label>\r\n            <button type=\"submit\" className=\"btn-submit\">\r\n              <span className=\"child\"> Đăng Nhập</span>\r\n            </button>\r\n          </form>\r\n        ) : (\r\n          <form onSubmit={handleSubmitRegister}>\r\n            <label htmlFor=\"emailReg\" className=\"text-input\">\r\n              <input\r\n                type=\"text\"\r\n                name=\"email\"\r\n                id=\"emailReg\"\r\n                value={dataReg.email}\r\n                onChange={handleOnchangeRegister}\r\n                placeholder=\"Email\"\r\n              />\r\n            </label>\r\n            <label htmlFor=\"usernameReg\" className=\"text-input\">\r\n              <input\r\n                type=\"text\"\r\n                name=\"username\"\r\n                id=\"usernameReg\"\r\n                value={dataReg.username}\r\n                onChange={handleOnchangeRegister}\r\n                placeholder=\"User name\"\r\n              />\r\n            </label>\r\n            <label htmlFor=\"passwordReg\" className=\"text-input\">\r\n              <input\r\n                type=\"password\"\r\n                name=\"password\"\r\n                id=\"passwordReg\"\r\n                value={dataReg.password}\r\n                onChange={handleOnchangeRegister}\r\n                placeholder=\"Password\"\r\n              />\r\n            </label>\r\n            <label htmlFor=\"passwordRegCheck\" className=\"text-input\">\r\n              <input\r\n                type=\"password\"\r\n                name=\"passwordCheck\"\r\n                id=\"passwordRegCheck\"\r\n                value={dataReg.passwordCheck}\r\n                onChange={handleOnchangeRegister}\r\n                placeholder=\"Password\"\r\n              />\r\n            </label>\r\n            <label htmlFor=\"name\" className=\"text-input\">\r\n              <input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                id=\"name\"\r\n                value={dataReg.name}\r\n                onChange={handleOnchangeRegister}\r\n                placeholder=\"Họ Tên\"\r\n              />\r\n            </label>\r\n            <label htmlFor=\"photo-url\" className=\"photo-url\"></label>\r\n            <button type=\"submit\" className=\"btn-submit-register\">\r\n              <span className=\"child\"> Đăng Ký</span>\r\n            </button>\r\n          </form>\r\n        )}\r\n\r\n        {/* <GoogleLogin\r\n          clientId=\"467571315756-vigfi3qh89vvgbeqhduotlr2jso13gl5.apps.googleusercontent.com\"\r\n          onSuccess={handleSuccess}\r\n          onFailure={handleFailure}\r\n          cookiePolicy=\"single_host_origin\"\r\n          render={(props) => (\r\n            <button className=\"login-btn\" onClick={props.onClick} disabled={props.disabled}>\r\n              <ImGooglePlus className=\"icon\" /> Đăng Nhập Bằng Google\r\n            </button>\r\n          )}\r\n        /> */}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","E:\\MyApp\\Github\\JavaProject\\spring\\project\\phim_pro_client\\src\\pages\\Home\\Home.jsx",[],"E:\\MyApp\\Github\\JavaProject\\spring\\project\\phim_pro_client\\src\\pages\\Manager\\Manager.jsx",["328"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./Manager.scss\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { createFilm, updateFilm, setIsEdit } from \"actions/film.action\";\r\nimport convert from \"components/utils/convert\";\r\n\r\nconst Manager = () => {\r\n  const dispatch = useDispatch();\r\n  const film = useSelector((state) => state.films.film);\r\n  const role = useSelector((state) => state.users.role);\r\n  const isEdit = useSelector((state) => state.films.isEdit);\r\n\r\n  const [filmData, setFilmData] = useState({\r\n    title: \"\",\r\n    url: \"\",\r\n    image: \"\",\r\n    stars: \"\",\r\n    category: \"\",\r\n    episode: \"\",\r\n    directors: \"\",\r\n    country: \"\",\r\n    description: \"\",\r\n    up_coming: \"\",\r\n    is_multi: \"\",\r\n  });\r\n  useEffect(() => {\r\n    if (isEdit) {\r\n      setFilmData(film);\r\n    }\r\n  }, []);\r\n  const handleChange = (e) => {\r\n    setFilmData({ ...filmData, [e.target.name]: e.target.value });\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (Object.values(filmData).every((item) => item !== \"\")) {\r\n      const regex = /youtube.com\\/watch\\?v=/g;\r\n      if (isEdit) {\r\n        dispatch(\r\n          updateFilm({\r\n            ...filmData,\r\n            search: convert(filmData.title),\r\n            url: filmData.url.match(regex) ? filmData.url.replace(regex, \"youtube.com/embed/\") : filmData.url,\r\n          })\r\n        );\r\n      } else {\r\n        dispatch(\r\n          createFilm({\r\n            ...filmData,\r\n            search: convert(filmData.title),\r\n            url: filmData.url.match(regex) ? filmData.url.replace(regex, \"youtube.com/embed/\") : filmData.url,\r\n          })\r\n        );\r\n      }\r\n\r\n      setFilmData({\r\n        title: \"\",\r\n        url: \"\",\r\n        image: \"\",\r\n        stars: \"\",\r\n        category: \"\",\r\n        episode: \"\",\r\n        directors: \"\",\r\n        country: \"\",\r\n        description: \"\",\r\n        created_date: \"date\",\r\n        up_coming: \"false\",\r\n        evaluate: 10,\r\n        is_multi: \"false\",\r\n      });\r\n      dispatch(setIsEdit(null));\r\n      window.scrollTo({ top: 0, left: 0 });\r\n    } else {\r\n      alert(\"Phải điền đầy đủ các trường !\");\r\n    }\r\n  };\r\n  if (!role) return <h1>Page not found</h1>;\r\n  return (\r\n    <section className=\"manager\">\r\n      <div className=\"form-input\">\r\n        <form onSubmit={handleSubmit}>\r\n          <label htmlFor=\"title\" className=\"text-input\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"title\"\r\n              id=\"title\"\r\n              value={filmData.title}\r\n              onChange={handleChange}\r\n              placeholder=\"Tên Phim (ví dụ : Gái Già Lắm Chiêu)\"\r\n            />\r\n          </label>\r\n          <label htmlFor=\"image\" className=\"text-input\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"image\"\r\n              id=\"image\"\r\n              value={filmData.image}\r\n              onChange={handleChange}\r\n              placeholder=\"Đường dẫn ảnh đại diện phim  (ví dụ : https://image-phim-hay.jpg)\"\r\n            />\r\n          </label>\r\n          <label htmlFor=\"stars\" className=\"text-input\">\r\n            <input\r\n              type=\"number\"\r\n              name=\"stars\"\r\n              id=\"stars\"\r\n              value={filmData.stars}\r\n              onChange={handleChange}\r\n              placeholder=\"Số sao của phim (ví dụ: 4)\"\r\n              min=\"1\"\r\n              max=\"5\"\r\n            />\r\n          </label>\r\n          <label htmlFor=\"category\" className=\"text-input\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"category\"\r\n              id=\"category\"\r\n              value={filmData.category}\r\n              onChange={handleChange}\r\n              placeholder=\"Thể loại phim (ví dụ: Phim ngôn tình)\"\r\n            />\r\n          </label>\r\n          <label htmlFor=\"episode\" className=\"text-input\">\r\n            <input\r\n              type=\"number\"\r\n              name=\"episode\"\r\n              id=\"episode\"\r\n              value={filmData.episode}\r\n              onChange={handleChange}\r\n              placeholder=\"Số tập phim (ví dụ : 3)\"\r\n              min=\"1\"\r\n            />\r\n          </label>\r\n          <label htmlFor=\"directors\" className=\"text-input\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"directors\"\r\n              id=\"directors\"\r\n              value={filmData.directors}\r\n              onChange={handleChange}\r\n              placeholder=\"Đạo diễn (ví dụ: Fujitora)\"\r\n            />\r\n          </label>\r\n          <label htmlFor=\"country\" className=\"text-input\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"country\"\r\n              id=\"country\"\r\n              value={filmData.country}\r\n              onChange={handleChange}\r\n              placeholder=\"Nước sản xuất (ví dụ : Việt Nam)\"\r\n            />\r\n          </label>\r\n          <label htmlFor=\"description\" className=\"text-input\">\r\n            <textarea\r\n              type=\"text\"\r\n              name=\"description\"\r\n              id=\"description\"\r\n              value={filmData.description}\r\n              onChange={handleChange}\r\n              placeholder=\"Mô tả phim (ví dụ : Cua Lại Vợ Bầu là một phim lẻ thuộc thể loại Hài hước nhưng không kém phần cảm xúc , nhiều lúc làm người xem phải khóc theo. Phim được thực hiện bởi đạo diễn Nhất Trung. Một đạo diễn rất nổi tiếng mà chắc hẳn fan của Phim Việt Nam chắc ai cũng biết. Phim với sự tham gia của dàn diễn viên nổi tiếng Showbiz Việt như Trấn Thành...)\"\r\n              rows=\"10\"\r\n            />\r\n          </label>\r\n          <div className=\"radio-group\">\r\n            <label className=\"radio-input\">\r\n              <input\r\n                type=\"radio\"\r\n                name=\"up_coming\"\r\n                checked={filmData.up_coming.toString() === \"false\"}\r\n                value={false}\r\n                onChange={handleChange}\r\n              />{\" \"}\r\n              Đã ra mắt\r\n            </label>\r\n            <label className=\"radio-input\">\r\n              <input\r\n                type=\"radio\"\r\n                name=\"up_coming\"\r\n                checked={filmData.up_coming.toString() === \"true\"}\r\n                value={true}\r\n                onChange={handleChange}\r\n              />{\" \"}\r\n              Chưa ra mắt\r\n            </label>\r\n          </div>\r\n          <div className=\"radio-group\">\r\n            <label className=\"radio-input\">\r\n              <input\r\n                type=\"radio\"\r\n                name=\"is_multi\"\r\n                checked={filmData.is_multi.toString() === \"false\"}\r\n                value={false}\r\n                onChange={handleChange}\r\n              />{\" \"}\r\n              Phim Lẻ\r\n            </label>\r\n            <label className=\"radio-input\">\r\n              <input\r\n                type=\"radio\"\r\n                name=\"is_multi\"\r\n                checked={filmData.is_multi.toString() === \"true\"}\r\n                value={true}\r\n                onChange={handleChange}\r\n              />{\" \"}\r\n              Phim Bộ\r\n            </label>\r\n          </div>\r\n          {filmData.is_multi === \"false\" && (\r\n            <label htmlFor=\"url\" className=\"text-input\">\r\n              <input\r\n                type=\"text\"\r\n                name=\"url\"\r\n                id=\"url\"\r\n                value={filmData.url}\r\n                onChange={handleChange}\r\n                placeholder=\"Đường dẫn video phim (ví dụ : https://video-phim-hay.mp4)\"\r\n              />\r\n            </label>\r\n          )}\r\n          <button type=\"submit\" className=\"submit-btn\">\r\n            {isEdit ? \"Cập Nhật Phim\" : \"Thêm Phim\"}\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Manager;\r\n","E:\\MyApp\\Github\\JavaProject\\spring\\project\\phim_pro_client\\src\\pages\\SeriesFilm\\SeriesFilm.jsx",[],"E:\\MyApp\\Github\\JavaProject\\spring\\project\\phim_pro_client\\src\\pages\\OddFilm\\OddFilm.jsx",[],"E:\\MyApp\\Github\\JavaProject\\spring\\project\\phim_pro_client\\src\\components\\Header\\Header.jsx",[],"E:\\MyApp\\Github\\JavaProject\\spring\\project\\phim_pro_client\\src\\pages\\Film\\Film.jsx",["329"],"import React, { useState, useEffect } from \"react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { BsTagFill } from \"react-icons/bs\";\r\nimport { HiHeart, HiEye } from \"react-icons/hi\";\r\nimport { BiEdit } from \"react-icons/bi\";\r\nimport { FaTrash } from \"react-icons/fa\";\r\nimport { AiOutlinePlusCircle } from \"react-icons/ai\";\r\n\r\nimport * as apis from \"apis\";\r\nimport { getSingleFilm, setIsEdit, removeFilm } from \"actions/film.action\";\r\nimport { addFavorite, addWatched, removeFavorite } from \"actions/user.action\";\r\nimport \"./Film.scss\";\r\nimport Stars from \"components/utils/Stars/Stars\";\r\nimport ListFilm from \"components/utils/ListFilm/ListFilm\";\r\nimport ModalFilm from \"components/Modal/ModalFilm\";\r\nimport Comment from \"components/Comment/Comment\";\r\nimport Episode from \"components/Episode/Episode\";\r\nimport useOnScreen from \"components/utils/Hooks/useOnScreen\";\r\n\r\nconst Film = () => {\r\n  const [modal, setModal] = useState(false);\r\n  const [url, setUrl] = useState(\"\");\r\n  const [showAddEp, setShowAddEp] = useState(false);\r\n  const [episode, setEpisode] = useState({ number_ep: \"\", url: \"\" });\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.users);\r\n  const film = useSelector((state) => state.films.film);\r\n  const films = useSelector((state) => state.films.films);\r\n  const { id } = useParams();\r\n  const history = useHistory();\r\n  const [ref, visible] = useOnScreen({ threshold: 0.4 });\r\n  useEffect(() => {\r\n    dispatch(getSingleFilm(id));\r\n    window.scrollTo({ top: 0, left: 0 });\r\n  }, [id]);\r\n\r\n  const handleFav = () => {\r\n    if (user?.favorites?.find((item) => item * 1 === film.id)) {\r\n      dispatch(removeFavorite(film.id));\r\n    } else {\r\n      dispatch(addFavorite(film.id));\r\n    }\r\n  };\r\n  const handleWatch = () => {\r\n    if (!user?.watched?.find((item) => item * 1 === film.id) && user.username) {\r\n      localStorage.setItem(\"title\", film.title);\r\n      localStorage.setItem(\"category\", film.category);\r\n      setModal(!modal);\r\n      dispatch(addWatched(film.id));\r\n    } else if (!user.username) {\r\n      history.push(\"/account\");\r\n      alert(\"Phải Đăng Nhập Để Xem !\");\r\n    } else if (user.username) {\r\n      localStorage.setItem(\"category\", film.category);\r\n      localStorage.setItem(\"title\", film.title);\r\n      setModal(!modal);\r\n    }\r\n  };\r\n  const handleEdit = () => {\r\n    dispatch(setIsEdit(id));\r\n    history.push(\"/manager\");\r\n  };\r\n  const handleRemove = () => {\r\n    const verify = window.confirm(\"Are you sure you want to delete?\");\r\n    if (verify) {\r\n      dispatch(removeFilm(id));\r\n      history.push(\"/\");\r\n    }\r\n  };\r\n  const handleView = (url) => {\r\n    setUrl(url);\r\n    setModal(true);\r\n  };\r\n  const handleShowAdd = () => {\r\n    setShowAddEp(!showAddEp);\r\n  };\r\n  const handleChange = (e) => {\r\n    setEpisode({ ...episode, [e.target.name]: e.target.value });\r\n  };\r\n  const handleAddEp = async (e) => {\r\n    e.preventDefault();\r\n    const regex = /youtube.com\\/watch\\?v=/g;\r\n\r\n    await apis.createEpisode({\r\n      ...episode,\r\n      film_id: id,\r\n      url: episode.url.match(regex) ? episode.url.replace(regex, \"youtube.com/embed/\") : episode.url,\r\n    });\r\n    setEpisode({ number_ep: 0, url: \"\" });\r\n  };\r\n  if (!film) return <></>;\r\n  return (\r\n    <section className=\"film\">\r\n      {modal && <ModalFilm setModal={setModal} url={url || film.url} />}\r\n      <div className=\"film__introduce\">\r\n        <div className=\"film__introduce-left\">\r\n          <img src={film.image} alt={film.title} />\r\n        </div>\r\n        <div className=\"film__introduce-right\">\r\n          <h3 className=\"title\">{film.title}</h3>\r\n          <div className=\"evaluate\">\r\n            <Stars stars={film.stars * 1} />\r\n            <p>\r\n              <BsTagFill className=\"icon-tag\" />\r\n              {film.category}\r\n            </p>\r\n          </div>\r\n          <div className=\"btn-group\">\r\n            <button\r\n              className={`add-fav ${user?.favorites?.find((item) => item * 1 === film.id) ? \"disable\" : \"\"}`}\r\n              onClick={handleFav}\r\n            >\r\n              <span className=\"child\">\r\n                {\" \"}\r\n                <HiHeart /> {user?.favorites?.find((item) => item * 1 === film.id) ? \"Hủy Thích\" : \"Yêu Thích\"}\r\n              </span>\r\n            </button>\r\n\r\n            <button className=\"watch\" onClick={handleWatch}>\r\n              <span className=\"child\">\r\n                {\" \"}\r\n                <HiEye /> {film.up_coming === false ? \"Xem Phim\" : \"Trailer\"}\r\n              </span>\r\n            </button>\r\n\r\n            {user.role && (\r\n              <>\r\n                <button className=\"watch\" onClick={handleEdit}>\r\n                  <span className=\"child\">\r\n                    <BiEdit /> Cập Nhật\r\n                  </span>\r\n                </button>\r\n                <div className=\"episode\">\r\n                  <span onClick={handleShowAdd} className=\"child\">\r\n                    <AiOutlinePlusCircle /> {showAddEp ? \"Thoát\" : \"Thêm Tập\"}\r\n                  </span>\r\n                  {showAddEp && (\r\n                    <div className=\"add-episode-modal\">\r\n                      <form onSubmit={handleAddEp}>\r\n                        <label htmlFor=\"url\" className=\"text-input\">\r\n                          <input\r\n                            type=\"text\"\r\n                            name=\"url\"\r\n                            id=\"url\"\r\n                            value={episode.url}\r\n                            onChange={handleChange}\r\n                            placeholder=\"Đường dẫn video(ví dụ: https://www.youtube.com/watch?v=DmjAF49cJX8)\"\r\n                          />\r\n                        </label>\r\n                        <label htmlFor=\"number_ep\" className=\"text-input\">\r\n                          <input\r\n                            type=\"number\"\r\n                            name=\"number_ep\"\r\n                            id=\"number_ep\"\r\n                            value={episode.number_ep}\r\n                            onChange={handleChange}\r\n                            placeholder=\"Số tập (ví dụ : 5)\"\r\n                          />\r\n                        </label>\r\n                        <button type=\"submit\" className=\"submit-btn\">\r\n                          <span className=\"child\">Thêm tập phim</span>\r\n                        </button>\r\n                      </form>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <button className=\"add-fav\" onClick={handleRemove}>\r\n                  <span className=\"child\">\r\n                    {\" \"}\r\n                    <FaTrash /> Xóa Phim\r\n                  </span>\r\n                </button>\r\n              </>\r\n            )}\r\n          </div>\r\n          <div className=\"details-option\">\r\n            <p>\r\n              <span className=\"bold\">Trạng thái:</span>\r\n              <span className=\"orange-text\"> {film.upComing === \"true\" ? \"Chưa ra mắt\" : \"Hoàn tất\"}</span>\r\n            </p>\r\n            <p>\r\n              <span className=\"bold\">Đạo diễn:</span> <span className=\"orange-text\">{film.directors},</span>\r\n            </p>\r\n            <p>\r\n              <span className=\"bold\">Quốc gia:</span> <span className=\"orange-text\">{film.country},</span>\r\n            </p>\r\n            <p>\r\n              <span className=\"bold\">Lượng yêu thích:</span> <span className=\"orange-text\">{film.fav_count} người</span>\r\n            </p>\r\n            <p>\r\n              <span className=\"bold\">Thời lượng:</span>{\" \"}\r\n              <span className=\"orange-text\">{film.is_multi === \"true\" ? \"45\" : \"90\"} phút/tập</span>\r\n            </p>\r\n            <p>\r\n              <span className=\"bold\">Số tập:</span> <span className=\"orange-text\">{film.episode} tập</span>\r\n            </p>\r\n            <p>\r\n              <span className=\"bold\">Chất lượng:</span> <span className=\"orange-text\">Nhúng</span>\r\n            </p>\r\n            <p>\r\n              <span className=\"bold\">Số bình luận:</span>{\" \"}\r\n              <span className=\"orange-text\">{film.comment_count} bình luận</span>\r\n            </p>\r\n            <p>\r\n              <span className=\"bold\">Ngôn ngữ:</span> <span className=\"orange-text\">Phụ đề Việt</span>\r\n            </p>\r\n            <p>\r\n              <span className=\"bold\">Thể loại:</span> <span className=\"orange-text\">{film.category}</span>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {film.is_multi && <Episode id={id} handleView={handleView} />}\r\n      <div ref={ref} className={`film__detail ${visible ? \"show\" : \"\"}`}>\r\n        {film.description}\r\n      </div>\r\n      <Comment id={id} comment_count={film.comment_count} />\r\n      <ListFilm type=\"row\" films={films.filter((item) => item.is_multi === film.is_multi && item.id !== film.id)} />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Film;\r\n","E:\\MyApp\\Github\\JavaProject\\spring\\project\\phim_pro_client\\src\\components\\Footer\\Footer.jsx",[],"E:\\MyApp\\Github\\JavaProject\\spring\\project\\phim_pro_client\\src\\reducers\\film.reducer.js",["330"],"import {\r\n  CREATE_FILM,\r\n  GET_FILMS,\r\n  GET_SINGLE_FILM,\r\n  UPDATE_FILM,\r\n  REMOVE_FILM,\r\n  SET_IS_EDIT,\r\n  GET_FAVORITES,\r\n  GET_WATCHED,\r\n  GET_ALL_EPISODE,\r\n} from \"../constants/actionTypes\";\r\n\r\nexport default (state = { films: [], isEdit: null, favorites: [], watched: [], film: null, episodes: [] }, action) => {\r\n  switch (action.type) {\r\n    case CREATE_FILM:\r\n      return { ...state, films: [...state.films, action.payload] };\r\n    case GET_FILMS:\r\n      return { ...state, films: action.payload };\r\n    case SET_IS_EDIT:\r\n      return { ...state, isEdit: action.payload };\r\n    case GET_FAVORITES:\r\n      return { ...state, favorites: action.payload };\r\n    case GET_WATCHED:\r\n      return { ...state, watched: action.payload };\r\n    case GET_SINGLE_FILM:\r\n      return { ...state, film: action.payload };\r\n    case REMOVE_FILM:\r\n      return { ...state, films: state.films.filter((film) => film.id * 1 !== action.payload * 1) };\r\n    case UPDATE_FILM:\r\n      return { ...state, films: state.films.map((film) => (film.id === action.payload.id ? action.payload : film)) };\r\n    case GET_ALL_EPISODE:\r\n      return { ...state, episodes: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","E:\\MyApp\\Github\\JavaProject\\spring\\project\\phim_pro_client\\src\\reducers\\user.reducer.js",["331","332","333"],"import {\r\n  LOGIN,\r\n  REGISTER,\r\n  UPDATE_AVATAR,\r\n  GET_USER,\r\n  LOGOUT,\r\n  CHECK_LOGIN,\r\n  LOGIN_GOOGLE,\r\n  ADD_WATCHED,\r\n  ADD_FAVORITE,\r\n  REMOVE_FAVORITE,\r\n  SET_ROLE,\r\n} from \"../constants/actionTypes\";\r\n\r\nexport default (\r\n  userState = { username: null, token: null, role: null, avatar: null, favorites: null, watched: null, type: null },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case LOGIN:\r\n    case LOGIN_GOOGLE:\r\n      return {\r\n        username: action.payload.name,\r\n        token: action.payload.authenticationToken,\r\n        role: action.payload.role,\r\n        avatar: action.payload.avatar,\r\n        favorites: action.payload.favorites,\r\n        watched: action.payload.watched,\r\n        type: action.payload.type,\r\n      };\r\n    case LOGOUT:\r\n      return { username: null, token: null, role: null, avatar: null };\r\n    case CHECK_LOGIN:\r\n      return { user: action.payload.data, token: action.payload.token };\r\n    case ADD_FAVORITE:\r\n      return { ...userState, favorites: [...userState.favorites, action.payload] };\r\n    case ADD_WATCHED:\r\n      return { ...userState, watched: [...userState.watched, action.payload] };\r\n    case REMOVE_FAVORITE:\r\n      return { ...userState, favorites: userState.favorites.filter((item) => item * 1 !== action.payload * 1) };\r\n    case SET_ROLE:\r\n      return { ...userState, role: action.payload };\r\n    case UPDATE_AVATAR:\r\n      return { ...userState, avatar: action.payload };\r\n    default:\r\n      return userState;\r\n  }\r\n};\r\n","E:\\MyApp\\Github\\JavaProject\\spring\\project\\phim_pro_client\\src\\constants\\actionTypes.js",[],"E:\\MyApp\\Github\\JavaProject\\spring\\project\\phim_pro_client\\src\\components\\Search\\Search.jsx",["334"],"E:\\MyApp\\Github\\JavaProject\\spring\\project\\phim_pro_client\\src\\components\\Modal\\ModalFilm.jsx",["335"],"E:\\MyApp\\Github\\JavaProject\\spring\\project\\phim_pro_client\\src\\components\\Header\\Nav\\Nav.jsx",["336"],"import React, { useEffect } from \"react\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport \"./Nav.scss\";\r\n\r\nconst Nav = ({ showNav, setShowNav }) => {\r\n  const history = useHistory();\r\n  const location = useLocation().pathname;\r\n  const user = useSelector((state) => state.users);\r\n\r\n  useEffect(() => {\r\n    const handleEvent = (e) => {\r\n      if (e.target.classList.contains(\"bold\") || e.target.classList.contains(\"ul\")) {\r\n        setShowNav(false);\r\n      }\r\n    };\r\n    window.addEventListener(\"click\", handleEvent);\r\n    return () => window.removeEventListener(\"click\", handleEvent);\r\n  }, []);\r\n  return (\r\n    <nav className={`nav ${showNav ? \"show\" : \"\"}`}>\r\n      <ul className=\"ul\">\r\n        <li className={`bold ${location === \"/oddfilm\" ? \"active\" : \"\"}`} onClick={() => history.push(\"/oddfilm\")}>\r\n          Phim Lẻ\r\n        </li>\r\n        <li\r\n          className={`bold ${location === \"/seriesfilm\" ? \"active\" : \"\"}`}\r\n          onClick={() => history.push(\"/seriesfilm\")}\r\n        >\r\n          Phim Bộ\r\n        </li>\r\n        {user.role && (\r\n          <li className={`bold ${location === \"/manager\" ? \"active\" : \"\"}`} onClick={() => history.push(\"/manager\")}>\r\n            Quản Lý Phim\r\n          </li>\r\n        )}\r\n        <li className={`bold ${location === \"/account\" ? \"active\" : \"\"}`} onClick={() => history.push(\"/account\")}>\r\n          {user.username ? (\r\n            <div className=\"account bold\">\r\n              <img\r\n                src={\r\n                  user.avatar ||\r\n                  \"https://res.cloudinary.com/giangtheshy/image/upload/v1618042500/dev/khumuivietnam/pcwl6uqwzepykmhnpuks.jpg\"\r\n                }\r\n                alt=\"avatar\"\r\n                className=\"avatar bold\"\r\n              />\r\n              <p className=\"bold\">{user.username}</p>\r\n            </div>\r\n          ) : (\r\n            \"Tài Khoản\"\r\n          )}\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","E:\\MyApp\\Github\\JavaProject\\spring\\project\\phim_pro_client\\src\\components\\utils\\Stars\\Stars.jsx",[],"E:\\MyApp\\Github\\JavaProject\\spring\\project\\phim_pro_client\\src\\components\\utils\\ListFilm\\ListFilm.jsx",[],"E:\\MyApp\\Github\\JavaProject\\spring\\project\\phim_pro_client\\src\\components\\Home\\LeftContent\\LeftContent.jsx",["337","338"],"import React, { useCallback } from \"react\";\r\nimport stringSimilarity from \"string-similarity\";\r\nimport \"./LeftContent.scss\";\r\nimport ListFilm from \"../../utils/ListFilm/ListFilm\";\r\nimport compare from \"components/utils/similarString\";\r\nconst LeftContent = ({ films }) => {\r\n  const recommenderFilm = useCallback(() => {\r\n    const title = localStorage.getItem(\"title\");\r\n    const category = localStorage.getItem(\"category\");\r\n    if (!title || !category) {\r\n      return [];\r\n    }\r\n    const mapToArrayRecommendation = films.map((film) => {\r\n      const ratingTitle = stringSimilarity.compareTwoStrings(film.title, title);\r\n      const ratingCategory = stringSimilarity.compareTwoStrings(film.category, category);\r\n      return { ...film, rating: ratingTitle + ratingCategory / 5 };\r\n    });\r\n    return mapToArrayRecommendation.sort((a, b) => b.rating - a.rating).slice(1, 6);\r\n  }, [films?.length]);\r\n  if (!films) return <></>;\r\n  return (\r\n    <section className=\"left-container\">\r\n      <div className=\"left-container__top\">\r\n        <h3 className=\"title-left\">PHIM ĐỀ CỬ</h3>\r\n        <ListFilm type=\"column\" films={recommenderFilm()} />\r\n      </div>\r\n      <div className=\"left-container__bottom\">\r\n        <h3 className=\"title-left\">PHIM HOT</h3>\r\n        <ListFilm type=\"column\" films={films.sort((a, b) => b.fav_count - a.fav_count).slice(0, 5)} />\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default LeftContent;\r\n","E:\\MyApp\\Github\\JavaProject\\spring\\project\\phim_pro_client\\src\\components\\Home\\RightContent\\RightContent.jsx",[],"E:\\MyApp\\Github\\JavaProject\\spring\\project\\phim_pro_client\\src\\apis\\index.js",[],"E:\\MyApp\\Github\\JavaProject\\spring\\project\\phim_pro_client\\src\\apis\\axios.js",[],"E:\\MyApp\\Github\\JavaProject\\spring\\project\\phim_pro_client\\src\\components\\utils\\ListFilm\\Film\\Film.jsx",[],"E:\\MyApp\\Github\\JavaProject\\spring\\project\\phim_pro_client\\src\\components\\utils\\convert.js",[],"E:\\MyApp\\Github\\JavaProject\\spring\\project\\phim_pro_client\\src\\components\\utils\\similarString.js",["339","340","341","342"],"const similarity = (s1, s2) => {\r\n  let longer = s1;\r\n  let shorter = s2;\r\n  if (s1.length < s2.length) {\r\n    longer = s2;\r\n    shorter = s1;\r\n  }\r\n  let longerLength = longer.length;\r\n  if (longerLength == 0) {\r\n    return 1.0;\r\n  }\r\n  return (longerLength - editDistance(longer, shorter)) / parseFloat(longerLength);\r\n};\r\n\r\nconst editDistance = (s1, s2) => {\r\n  s1 = s1.toLowerCase();\r\n  s2 = s2.toLowerCase();\r\n\r\n  let costs = new Array();\r\n  for (let i = 0; i <= s1.length; i++) {\r\n    let lastValue = i;\r\n    for (let j = 0; j <= s2.length; j++) {\r\n      if (i == 0) costs[j] = j;\r\n      else {\r\n        if (j > 0) {\r\n          let newValue = costs[j - 1];\r\n          if (s1.charAt(i - 1) != s2.charAt(j - 1)) newValue = Math.min(Math.min(newValue, lastValue), costs[j]) + 1;\r\n          costs[j - 1] = lastValue;\r\n          lastValue = newValue;\r\n        }\r\n      }\r\n    }\r\n    if (i > 0) costs[s2.length] = lastValue;\r\n  }\r\n  return costs[s2.length];\r\n};\r\nexport default similarity;\r\n","E:\\MyApp\\Github\\JavaProject\\spring\\project\\phim_pro_client\\src\\components\\Comment\\Comment.jsx",[],"E:\\MyApp\\Github\\JavaProject\\spring\\project\\phim_pro_client\\src\\components\\Comment\\Comments\\Comments.jsx",["343"],"import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { getAllComments } from \"actions/comment.action\";\r\nimport ItemCmt from \"./ItemCmt\";\r\nimport \"./Comments.scss\";\r\n\r\nconst Comments = ({ id }) => {\r\n  const comments = useSelector((state) => state.comments);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    if (id) {\r\n      dispatch(getAllComments(id));\r\n    }\r\n  }, [id]);\r\n  return (\r\n    <div className=\"comments\">\r\n      {comments.map((comment,index) => (\r\n        <ItemCmt comment={comment} key={comment.id} index={index}/>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Comments;\r\n","E:\\MyApp\\Github\\JavaProject\\spring\\project\\phim_pro_client\\src\\components\\Comment\\FormComment\\FormComment.jsx",[],"E:\\MyApp\\Github\\JavaProject\\spring\\project\\phim_pro_client\\src\\components\\Comment\\Comments\\ItemCmt.jsx",["344","345","346"],"import React, { useState, useEffect } from \"react\";\r\nimport { BiDotsHorizontalRounded } from \"react-icons/bi\";\r\nimport { GrUpdate } from \"react-icons/gr\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { updateComment, deleteComment } from \"actions/comment.action\";\r\nimport moment from \"components/utils/moment\";\r\n\r\nconst ItemCmt = ({ comment, index }) => {\r\n  const user = useSelector((state) => state.users);\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [openSetting, setOpenSetting] = useState(false);\r\n  const [value, setValue] = useState(comment.message);\r\n  const [status, setStatus] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleEdit = () => {\r\n    setIsEdit(!isEdit);\r\n  };\r\n  const handleRemove = () => {\r\n    dispatch(deleteComment(comment.id));\r\n  };\r\n  const handleUpdate = (e) => {\r\n    e.preventDefault();\r\n    if (value) {\r\n      dispatch(\r\n        updateComment({\r\n          id: comment.id,\r\n          message: value,\r\n          film_id: comment.film_id,\r\n          created_date: comment.created_date,\r\n          user_id: comment.user_id,\r\n        })\r\n      );\r\n      setIsEdit(!isEdit);\r\n    }\r\n  };\r\n  return (\r\n    <article className={`comment-center ${comment.type === \"premium\" ? comment.type : \"\"} `}>\r\n      {user?.username === comment?.username && (\r\n        <button className=\"setting\" title=\"Cài đặt\" onClick={() => setOpenSetting(!openSetting)}>\r\n          <BiDotsHorizontalRounded />\r\n          {openSetting && (\r\n            <div className=\"drop-down\">\r\n              <ul>\r\n                <li onClick={handleEdit}>\r\n                  <span className=\"child\">{isEdit ? \"Thoát\" : \"Chỉnh sửa\"}</span>\r\n                </li>\r\n                <li onClick={handleRemove}>\r\n                  <span className=\"child\">Xóa</span>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          )}\r\n        </button>\r\n      )}\r\n      <img src={comment?.avatar || user?.avatar} alt=\"avatar\" />\r\n      <div className=\"cmt-right\">\r\n        <div className=\"cmt-right__top\">\r\n          <p className=\"name\">{comment?.username || user?.username}</p>\r\n          <small className=\"timer\">{moment(comment.created_date * 1000)}</small>\r\n        </div>\r\n        <div className=\"cmt-right__bot\">\r\n          {isEdit ? (\r\n            <form onSubmit={handleUpdate}>\r\n              <input className=\"message\" type=\"text\" defaultValue={value} onChange={(e) => setValue(e.target.value)} />\r\n              <button type=\"submit\">\r\n                <GrUpdate className=\"icon\" />\r\n              </button>\r\n            </form>\r\n          ) : (\r\n            <p className=\"message\">{comment?.message}</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </article>\r\n  );\r\n};\r\n\r\nexport default ItemCmt;\r\n","E:\\MyApp\\Github\\JavaProject\\spring\\project\\phim_pro_client\\src\\reducers\\comment.reducer.js",["347"],"import * as types from \"constants/actionTypes\";\r\n\r\nexport default (state = [], { payload, type }) => {\r\n  switch (type) {\r\n    case types.CREATE_COMMENT:\r\n      return [payload, ...state];\r\n    case types.UPDATE_COMMENT:\r\n      return state.map((cmt) => (cmt.id === payload.id ? payload : cmt));\r\n    case types.DELETE_COMMENT:\r\n      return state.filter((cmt) => cmt.id !== payload);\r\n    case types.GET_ALL_COMMENT:\r\n      return payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","E:\\MyApp\\Github\\JavaProject\\spring\\project\\phim_pro_client\\src\\actions\\comment.action.js",[],"E:\\MyApp\\Github\\JavaProject\\spring\\project\\phim_pro_client\\src\\components\\utils\\moment.js",["348"],"export default (createdAt) => {\r\n  const time = new Date().getTime() - new Date(createdAt).getTime();\r\n  if (time / (1000 * 60 * 60 * 24 * 30) >= 1) {\r\n    return `${Math.floor(time / (1000 * 60 * 60 * 24 * 30))} months ago`;\r\n  } else if (time / (1000 * 60 * 60 * 24) >= 1) {\r\n    return `${Math.floor(time / (1000 * 60 * 60 * 24))} days ago`;\r\n  } else if (time / (1000 * 60 * 60) >= 1) {\r\n    return `${Math.floor(time / (1000 * 60 * 60))} hours ago`;\r\n  } else if (time / (1000 * 60) >= 1) {\r\n    return `${Math.floor(time / (1000 * 60))} minutes ago`;\r\n  } else {\r\n    return \"Just now\";\r\n  }\r\n};\r\n","E:\\MyApp\\Github\\JavaProject\\spring\\project\\phim_pro_client\\src\\apis\\firebase.js",[],"E:\\MyApp\\Github\\JavaProject\\spring\\project\\phim_pro_client\\src\\components\\Episode\\Episode.jsx",["349","350"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getAllEpisodes } from \"actions/film.action\";\r\nimport \"./Episode.scss\";\r\nimport Episodes from \"./Episodes/Episodes\";\r\n\r\nimport useOnScreen from \"components/utils/Hooks/useOnScreen\";\r\n\r\nconst Episode = ({ id, handleView }) => {\r\n  const episodes = useSelector((state) => state.films.episodes);\r\n  const dispatch = useDispatch();\r\n  const [ref, visible] = useOnScreen({ threshold: 0.3 });\r\n\r\n  useEffect(() => {\r\n    dispatch(getAllEpisodes(id));\r\n  }, []);\r\n  return (\r\n    <section className=\"episode-section\">\r\n      <button className=\"select-episode\">\r\n        <span className=\"child\">Chọn tập phim</span>\r\n      </button>\r\n      <div ref={ref} className={`btn-container  ${visible ? \"show\" : \"\"}`}>\r\n        {episodes.map((episode, index) => (\r\n          <Episodes key={episode.id} episode={episode} handleView={handleView} index={index} />\r\n        ))}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Episode;\r\n","E:\\MyApp\\Github\\JavaProject\\spring\\project\\phim_pro_client\\src\\components\\Episode\\Episodes\\Episodes.jsx",[],"E:\\MyApp\\Github\\JavaProject\\spring\\project\\phim_pro_client\\src\\components\\utils\\Hooks\\useOnScreen.js",["351"],"import { useRef, useState, useEffect } from \"react\";\r\nconst useOnScreen = (options) => {\r\n  const ref = useRef(null);\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const observer = new IntersectionObserver(([entry]) => {\r\n      setVisible(entry.isIntersecting);\r\n    }, options);\r\n    if (ref.current) {\r\n      observer.observe(ref.current);\r\n    }\r\n    return () => {\r\n      if (ref.current) {\r\n        observer.unobserve(ref.current);\r\n      }\r\n    };\r\n  }, [ref, options]);\r\n  return [ref, visible];\r\n};\r\nexport default useOnScreen;\r\n","E:\\MyApp\\Github\\JavaProject\\spring\\project\\phim_pro_client\\src\\pages\\Payment\\Payment.jsx",[],"E:\\MyApp\\Github\\JavaProject\\spring\\project\\phim_pro_client\\src\\pages\\VnPayReturn\\VnPayReturn.jsx",["352"],"import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { AiOutlineCheckCircle } from \"react-icons/ai\";\r\nimport { VscError } from \"react-icons/vsc\";\r\nimport * as apis from \"apis\";\r\nimport \"./VnPayReturn.scss\";\r\n\r\nconst VnPayReturn = () => {\r\n  const [status, setStatus] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const fetchVnPayReturn = async () => {\r\n      const { data } = await apis.returnVnPay(history.location.search);\r\n      if (data.code === \"00\") {\r\n        setStatus(\"success\");\r\n      } else {\r\n        setStatus(\"failure\");\r\n      }\r\n    };\r\n    fetchVnPayReturn();\r\n  }, []);\r\n  return (\r\n    <section className=\"return-vnpay\">\r\n      <div className=\"center\">\r\n        {status === \"success\" ? (\r\n          <div className=\"alert-success\">\r\n            <AiOutlineCheckCircle />\r\n            <span>Thanh toán thành công!</span>\r\n          </div>\r\n        ) : (\r\n          <div className=\"alert-failure\">\r\n            <VscError />\r\n            <span>Thanh toán thất bại!</span>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default VnPayReturn;\r\n",{"ruleId":"353","replacedBy":"354"},{"ruleId":"355","replacedBy":"356"},{"ruleId":"357","severity":1,"message":"358","line":28,"column":6,"nodeType":"359","endLine":28,"endColumn":8,"suggestions":"360"},{"ruleId":"357","severity":1,"message":"361","line":31,"column":6,"nodeType":"359","endLine":31,"endColumn":12,"suggestions":"362"},{"ruleId":"363","severity":1,"message":"364","line":4,"column":3,"nodeType":"365","messageId":"366","endLine":4,"endColumn":14},{"ruleId":"363","severity":1,"message":"367","line":5,"column":3,"nodeType":"365","messageId":"366","endLine":5,"endColumn":11},{"ruleId":"363","severity":1,"message":"364","line":4,"column":3,"nodeType":"365","messageId":"366","endLine":4,"endColumn":14},{"ruleId":"363","severity":1,"message":"367","line":5,"column":3,"nodeType":"365","messageId":"366","endLine":5,"endColumn":11},{"ruleId":"368","severity":1,"message":"369","line":15,"column":1,"nodeType":"370","endLine":34,"endColumn":3},{"ruleId":"357","severity":1,"message":"371","line":21,"column":6,"nodeType":"359","endLine":21,"endColumn":8,"suggestions":"372"},{"ruleId":"363","severity":1,"message":"373","line":1,"column":17,"nodeType":"365","messageId":"366","endLine":1,"endColumn":25},{"ruleId":"363","severity":1,"message":"374","line":9,"column":10,"nodeType":"365","messageId":"366","endLine":9,"endColumn":18},{"ruleId":"363","severity":1,"message":"375","line":20,"column":10,"nodeType":"365","messageId":"366","endLine":20,"endColumn":17},{"ruleId":"357","severity":1,"message":"361","line":42,"column":6,"nodeType":"359","endLine":42,"endColumn":12,"suggestions":"376"},{"ruleId":"357","severity":1,"message":"377","line":31,"column":6,"nodeType":"359","endLine":31,"endColumn":8,"suggestions":"378"},{"ruleId":"357","severity":1,"message":"361","line":28,"column":6,"nodeType":"359","endLine":28,"endColumn":10,"suggestions":"379"},{"ruleId":"380","severity":1,"message":"381","line":10,"column":7,"nodeType":"382","endLine":10,"endColumn":58},{"ruleId":"368","severity":1,"message":"369","line":12,"column":1,"nodeType":"370","endLine":33,"endColumn":3},{"ruleId":"353","replacedBy":"383"},{"ruleId":"355","replacedBy":"384"},{"ruleId":"357","severity":1,"message":"361","line":28,"column":6,"nodeType":"359","endLine":28,"endColumn":8,"suggestions":"385"},{"ruleId":"357","severity":1,"message":"361","line":31,"column":6,"nodeType":"359","endLine":31,"endColumn":12,"suggestions":"386"},{"ruleId":"363","severity":1,"message":"387","line":3,"column":3,"nodeType":"365","messageId":"366","endLine":3,"endColumn":11},{"ruleId":"363","severity":1,"message":"367","line":5,"column":3,"nodeType":"365","messageId":"366","endLine":5,"endColumn":11},{"ruleId":"363","severity":1,"message":"388","line":7,"column":3,"nodeType":"365","messageId":"366","endLine":7,"endColumn":14},{"ruleId":"357","severity":1,"message":"361","line":40,"column":6,"nodeType":"359","endLine":40,"endColumn":21,"suggestions":"389"},{"ruleId":"363","severity":1,"message":"390","line":41,"column":9,"nodeType":"365","messageId":"366","endLine":41,"endColumn":22},{"ruleId":"363","severity":1,"message":"391","line":47,"column":9,"nodeType":"365","messageId":"366","endLine":47,"endColumn":22},{"ruleId":"357","severity":1,"message":"377","line":30,"column":6,"nodeType":"359","endLine":30,"endColumn":8,"suggestions":"392"},{"ruleId":"357","severity":1,"message":"361","line":36,"column":6,"nodeType":"359","endLine":36,"endColumn":10,"suggestions":"393"},{"ruleId":"368","severity":1,"message":"369","line":12,"column":1,"nodeType":"370","endLine":33,"endColumn":3},{"ruleId":"363","severity":1,"message":"387","line":3,"column":3,"nodeType":"365","messageId":"366","endLine":3,"endColumn":11},{"ruleId":"363","severity":1,"message":"367","line":5,"column":3,"nodeType":"365","messageId":"366","endLine":5,"endColumn":11},{"ruleId":"368","severity":1,"message":"369","line":15,"column":1,"nodeType":"370","endLine":48,"endColumn":3},{"ruleId":"363","severity":1,"message":"373","line":1,"column":17,"nodeType":"365","messageId":"366","endLine":1,"endColumn":25},{"ruleId":"380","severity":1,"message":"381","line":10,"column":7,"nodeType":"382","endLine":10,"endColumn":58},{"ruleId":"357","severity":1,"message":"371","line":20,"column":6,"nodeType":"359","endLine":20,"endColumn":8,"suggestions":"394"},{"ruleId":"363","severity":1,"message":"395","line":5,"column":8,"nodeType":"365","messageId":"366","endLine":5,"endColumn":15},{"ruleId":"357","severity":1,"message":"396","line":19,"column":6,"nodeType":"359","endLine":19,"endColumn":21,"suggestions":"397"},{"ruleId":"398","severity":1,"message":"399","line":9,"column":20,"nodeType":"400","messageId":"401","endLine":9,"endColumn":22},{"ruleId":"402","severity":1,"message":"403","line":19,"column":15,"nodeType":"404","messageId":"405","endLine":19,"endColumn":26},{"ruleId":"398","severity":1,"message":"399","line":23,"column":13,"nodeType":"400","messageId":"401","endLine":23,"endColumn":15},{"ruleId":"398","severity":1,"message":"406","line":27,"column":32,"nodeType":"400","messageId":"401","endLine":27,"endColumn":34},{"ruleId":"357","severity":1,"message":"361","line":15,"column":6,"nodeType":"359","endLine":15,"endColumn":10,"suggestions":"407"},{"ruleId":"363","severity":1,"message":"408","line":1,"column":27,"nodeType":"365","messageId":"366","endLine":1,"endColumn":36},{"ruleId":"363","severity":1,"message":"409","line":14,"column":10,"nodeType":"365","messageId":"366","endLine":14,"endColumn":16},{"ruleId":"363","severity":1,"message":"410","line":14,"column":18,"nodeType":"365","messageId":"366","endLine":14,"endColumn":27},{"ruleId":"368","severity":1,"message":"369","line":3,"column":1,"nodeType":"370","endLine":16,"endColumn":3},{"ruleId":"368","severity":1,"message":"369","line":1,"column":1,"nodeType":"370","endLine":14,"endColumn":3},{"ruleId":"363","severity":1,"message":"373","line":1,"column":28,"nodeType":"365","messageId":"366","endLine":1,"endColumn":36},{"ruleId":"357","severity":1,"message":"411","line":16,"column":6,"nodeType":"359","endLine":16,"endColumn":8,"suggestions":"412"},{"ruleId":"357","severity":1,"message":"413","line":15,"column":32,"nodeType":"365","endLine":15,"endColumn":39},{"ruleId":"357","severity":1,"message":"414","line":22,"column":6,"nodeType":"359","endLine":22,"endColumn":8,"suggestions":"415"},"no-native-reassign",["416"],"no-negated-in-lhs",["417"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'cookies.user' and 'dispatch'. Either include them or remove the dependency array.","ArrayExpression",["418"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["419"],"no-unused-vars","'DELETE_USER' is defined but never used.","Identifier","unusedVar","'GET_USER' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","React Hook useEffect has a missing dependency: 'setShowNav'. Either include it or remove the dependency array. If 'setShowNav' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["420"],"'useState' is defined but never used.","'FcGoogle' is defined but never used.","'cookies' is assigned a value but never used.",["421"],"React Hook useEffect has missing dependencies: 'film' and 'isEdit'. Either include them or remove the dependency array.",["422"],["423"],"jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement",["416"],["417"],["424"],["425"],"'REGISTER' is defined but never used.","'CHECK_LOGIN' is defined but never used.",["426"],"'handleSuccess' is assigned a value but never used.","'handleFailure' is assigned a value but never used.",["427"],["428"],["429"],"'compare' is defined but never used.","React Hook useCallback has a missing dependency: 'films'. Either include it or remove the dependency array.",["430"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","Expected '!==' and instead saw '!='.",["431"],"'useEffect' is defined but never used.","'status' is assigned a value but never used.","'setStatus' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'id'. Either include them or remove the dependency array.",["432"],"The ref value 'ref.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'ref.current' to a variable inside the effect, and use that variable in the cleanup function.","React Hook useEffect has a missing dependency: 'history.location.search'. Either include it or remove the dependency array.",["433"],"no-global-assign","no-unsafe-negation",{"desc":"434","fix":"435"},{"desc":"436","fix":"437"},{"desc":"438","fix":"439"},{"desc":"436","fix":"440"},{"desc":"441","fix":"442"},{"desc":"443","fix":"444"},{"desc":"445","fix":"446"},{"desc":"447","fix":"448"},{"desc":"449","fix":"450"},{"desc":"441","fix":"451"},{"desc":"443","fix":"452"},{"desc":"438","fix":"453"},{"desc":"454","fix":"455"},{"desc":"443","fix":"456"},{"desc":"443","fix":"457"},{"desc":"458","fix":"459"},"Update the dependencies array to be: [cookies.user, dispatch]",{"range":"460","text":"461"},"Update the dependencies array to be: [dispatch, user]",{"range":"462","text":"463"},"Update the dependencies array to be: [setShowNav]",{"range":"464","text":"465"},{"range":"466","text":"463"},"Update the dependencies array to be: [film, isEdit]",{"range":"467","text":"468"},"Update the dependencies array to be: [dispatch, id]",{"range":"469","text":"470"},"Update the dependencies array to be: [dispatch]",{"range":"471","text":"472"},"Update the dependencies array to be: [dispatch, role]",{"range":"473","text":"474"},"Update the dependencies array to be: [dispatch, user.username]",{"range":"475","text":"476"},{"range":"477","text":"468"},{"range":"478","text":"470"},{"range":"479","text":"465"},"Update the dependencies array to be: [films]",{"range":"480","text":"481"},{"range":"482","text":"470"},{"range":"483","text":"470"},"Update the dependencies array to be: [history.location.search]",{"range":"484","text":"485"},[1033,1035],"[cookies.user, dispatch]",[1100,1106],"[dispatch, user]",[725,727],"[setShowNav]",[1537,1543],[829,831],"[film, isEdit]",[1231,1235],"[dispatch, id]",[1053,1055],"[dispatch]",[1115,1121],"[dispatch, role]",[1421,1436],"[dispatch, user.username]",[830,832],[1612,1616],[662,664],[886,901],"[films]",[435,439],[569,571],[670,672],"[history.location.search]"]